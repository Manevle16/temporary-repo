{"version":3,"sources":["widgets/common/Epics.png","reducers/setupPageReducer.js","actions/actionTypes/setupPageActionTypes.js","reducers/teamBuilderPageReducer.js","actions/actionTypes/teamBuilderActionTypes.js","reducers/index.js","store.js","widgets/common/Header.jsx","widgets/SetupPage/components/ManuallyAssignedStudents.jsx","widgets/SetupPage/components/ManuallyAssignProjects.jsx","widgets/SetupPage/components/ExcelReader.jsx","widgets/SetupPage/components/PreferredProjectsSlider.jsx","widgets/SetupPage/components/SetupPage.jsx","actions/teamBuilderPageActions.js","widgets/SetupPage/containers/SetupPageContainer.jsx","actions/setupPageActions.js","widgets/TeamBuilderPage/components/CheckBox.jsx","widgets/TeamBuilderPage/components/TeamCombinationTable/TeamComboRow.js","widgets/TeamBuilderPage/components/TeamCombinationTable/DisplayTeamCombinations.jsx","widgets/TeamBuilderPage/components/DisplayProjectsTable/DisplayProjectRow.js","widgets/TeamBuilderPage/components/DisplayProjectsTable/DisplayProjects.jsx","widgets/TeamBuilderPage/components/DisplayTeamInformations.jsx","widgets/TeamBuilderPage/components/TeamBuilderPage.jsx","widgets/TeamBuilderPage/containers/TeamBuilderPageContainer.jsx","EpicsTeamBuilder.jsx","index.js"],"names":["module","exports","combineReducers","students","state","type","payload","projects","manuallyAssignedStudents","numOfPreferredProjects","maxChoicesConsidered","getSectedCombo","getTeamCombos","setupPage","setupPageReducer","teamCombos","teamBuilderPageReducer","getStudents","getProjects","getManuallyAssignedStudents","getNumOfPreferredProjects","getMaxPossibleChoices","middleware","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","Header","className","src","require","alt","React","Component","MAS","props","onClickHandler","index","document","getElementById","checked","SL","OS","copy","Object","assign","inputElements","getElementsByClassName","i","value","id","this","removeStudent","studentsAssigned","temp","keys","key","push","studentLink","mapStudents","CardDeck","Card","border","Table","striped","bordered","hover","style","width","map","listValue","data-item","onClick","bind","textAlign","name","display","justifyContent","delete","ManuallyAssignProjects","addProjectToStudent","projectByStudentId","projectName","project","length","currStudentID","assignProjToStudents","onProjectClickHandler","forEach","onStudentClickHandler","defaultChecked","student","parseInt","ExcelReader","getExtension","fileName","split","onProjectInputClick","projectInputRef","current","click","onStudentInputClick","studentInputRef","onProjectDrop","files","event","target","handleChangeProjects","onStudentDrop","handleChangeStudents","projectFileName","studentFileName","createRef","projectBtnRef","studentBtnRef","e","alert","setState","handleProjectFile","blur","handleStudentFile","file","reader","FileReader","rABS","readAsBinaryString","onload","bstr","result","wb","XLSX","read","bookVBA","wsname","SheetNames","ws","Sheets","data","utils","sheet_to_json","tempContainer","actualColNames","columnCount","decode_range","c","encode_col","v","error","reduce","accumalator","includes","slice","projectsArray","skillsArray","returning","skills","changeProjectsArray","readAsArrayBuffer","changeStudentsArray","setMaxPossibleChoices","maxPossibleChoices","minimumChoices","Number","POSITIVE_INFINITY","studentsArray","studentMajor","substring","indexOf","studentSkillsArray","choiceArray","response","choices","major","classification","gender","found_team","choice_num_awarded","onDrop","getRootProps","getInputProps","isDragActive","disabled","ref","accept","onChange","PreferredProjectsSlider","numOfPrefProjects","changeNumOfPreferredProjects","useState","setChecked","sliderRef","instanceRef","range","min","max","start","pips","mode","density","step","onSlide","render","handle","SetupPage","generateTeams","switchToTeamBuilder","defaultProps","teams","sid","members","assigned","splice","noResponseStudents","filter","j","randomStudents","JSON","parse","stringify","newTeams","k","Math","floor","random","findTeamForStudent","console","log","smallTeams","largeTeams","teamName","sTeam","sTeamFilled","lTeam","member","pop","choice","ind","unassignedReturn","unassignedNormal","teamAverageChoice","teamAverageClass","totalWeighedTeams","team","teamTotalClass","teamTotalChoice","teamMembers","avgScoreChoice","avgScoreClass","skillsMet","totalSkills","skill","foundSkill","skillsMetRatio","unassignedStudents","selectCombination","connect","dispatch","teamInformation","comboInformation","Checkbox","handleToggle","currentCategoryName","newCheckedCategory","display_name","TeamComboRow","combo","Fragment","toFixed","DisplayTeamCombinations","selectCombo","regrenerateTeam","borderRadius","DisplayProjectRow","selectMember","cursor","DisplayProjects","exportBtn","DisplayTeamInformations","mems","Col","TeamBuilderPage","loading","setLoading","setCombo","setMember","timeout","setTimeout","clearTimeout","selectProjects","selectMembers","renderViewProjects","renderTeamInformations","switchToSetup","CheckBox","Row","xs","md","height","Spinner","animation","role","size","EpicsTeamBuilder","showSetupPage","ReactDOM"],"mappings":"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","file":"static/js/main.377e4367.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Epics.72879e3e.png\";","import { combineReducers } from 'redux';\r\nimport {\r\n  CHANGE_NUM_PROJECT_SLIDER,\r\n  CHANGE_STUDENTS_ARRAY,\r\n  CHANGE_PROJECTS_ARRAY,\r\n  ASSIGN_PROJ_TO_STUDENT,\r\n  REMOVE_STUDENT,\r\n  SET_MAX_POSSIBLE_CHOICES\r\n} from '../actions/actionTypes/setupPageActionTypes';\r\n\r\nconst students = (state = [], { type, payload }) => {\r\n  switch (type) {\r\n    case CHANGE_STUDENTS_ARRAY:\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst projects = (state = [], { type, payload }) => {\r\n  switch (type) {\r\n    case CHANGE_PROJECTS_ARRAY:\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst manuallyAssignedStudents = (state = {}, { type, payload }) => {\r\n  switch (type) {\r\n    case REMOVE_STUDENT:\r\n      return payload;\r\n    case ASSIGN_PROJ_TO_STUDENT:\r\n      return {\r\n        ...state,\r\n        ...payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst numOfPreferredProjects = (state = 6, { type, payload }) => {\r\n  switch (type) {\r\n    case CHANGE_NUM_PROJECT_SLIDER:\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst maxChoicesConsidered = (state = 0, { type, payload }) => {\r\n  switch (type) {\r\n    case SET_MAX_POSSIBLE_CHOICES:\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  students,\r\n  projects,\r\n  manuallyAssignedStudents,\r\n  numOfPreferredProjects,\r\n  maxChoicesConsidered\r\n});\r\n","//Slider types\r\nexport const CHANGE_NUM_PROJECT_SLIDER = 'CHANGE_NUM_PROJECT_SLIDER';\r\nexport const CHANGE_PROJECTS_ARRAY = 'CHANGE_PROJECTS_ARRAY';\r\nexport const CHANGE_STUDENTS_ARRAY = 'CHANGE_STUDENT_ARRAY';\r\nexport const ASSIGN_PROJ_TO_STUDENT = 'ASSIGN_PROJ_TO_STUDENT';\r\nexport const REMOVE_STUDENT = 'REMOVE_STUDENT';\r\nexport const SET_MAX_POSSIBLE_CHOICES = 'SET_MAX_POSSIBLE_CHOICES';\r\n","import { combineReducers } from 'redux';\r\nimport { INITIATE_TEAM_GENERATION } from '../actions/actionTypes/teamBuilderActionTypes';\r\nimport { SELECT_TEAM_COMBINATION } from '../actions/actionTypes/teamBuilderActionTypes';\r\n\r\nconst getTeamCombos = (state = {}, { type, payload }) => {\r\n  switch (type) {\r\n    case INITIATE_TEAM_GENERATION:\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst getSectedCombo = (state = {}, { type, payload }) => {\r\n  switch (type) {\r\n    case SELECT_TEAM_COMBINATION:\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  getSectedCombo,\r\n  getTeamCombos\r\n});\r\n","export const INITIATE_TEAM_GENERATION = 'INITIATE_TEAM_GENERATION';\r\nexport const SELECT_TEAM_COMBINATION = 'SELECT_TEAM_COMBINATION';\r\n","import { combineReducers } from 'redux';\r\nimport { createSelector } from 'reselect';\r\nimport setupPageReducer from './setupPageReducer';\r\nimport teamBuilderPageReducer from './teamBuilderPageReducer';\r\n\r\nexport default combineReducers({\r\n  setupPage: setupPageReducer,\r\n  teamCombos: teamBuilderPageReducer\r\n});\r\n\r\n//Setup Page Selectors\r\nexport const getStudents = state => state.setupPage.students;\r\nexport const getProjects = state => state.setupPage.projects;\r\nexport const getManuallyAssignedStudents = state => state.setupPage.manuallyAssignedStudents;\r\nexport const getNumOfPreferredProjects = state => state.setupPage.numOfPreferredProjects;\r\nexport const getMaxPossibleChoices = state => state.setupPage.maxChoicesConsidered;\r\n\r\n//Team Builder Page Selectors\r\nexport const getTeamCombos = state => state.teamCombos.getTeamCombos;\r\nexport const getSelectedCombo = state => state.teamCombos.getSectedCombo;\r\n","import { applyMiddleware, createStore, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n\r\n  initialState,\r\n  composeEnhancers(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\n\r\nexport default class Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className='header-container'>\r\n        <div className='header'>\r\n          <img src={require('./Epics.png')} alt={\"EPIC's Logo\"} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Card, Table, CardDeck } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class MAS extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  delete(SL, OS) {\r\n    var copy = Object.assign({}, OS);\r\n    var inputElements = document.getElementsByClassName('messageCheckbox');\r\n    for (var i = 0; inputElements[i]; ++i) {\r\n      if (inputElements[i].checked) {\r\n        delete copy[SL[inputElements[i].value].id];\r\n        inputElements[i].checked = false;\r\n      }\r\n    }\r\n    this.props.removeStudent(copy);\r\n  }\r\n\r\n  onClickHandler = index => {\r\n    if (document.getElementById('checkbox' + index).checked == true) {\r\n      document.getElementById('checkbox' + index).checked = false;\r\n    } else {\r\n      document.getElementById('checkbox' + index).checked = true;\r\n    }\r\n  };\r\n\r\n  mapStudents(students, studentsAssigned) {\r\n    var temp = [];\r\n    for (var key of Object.keys(students)) {\r\n      if (students[key].id in studentsAssigned) {\r\n        temp.push(students[key]);\r\n      }\r\n    }\r\n    return temp;\r\n  }\r\n  render() {\r\n    let { manuallyAssignedStudents, students } = this.props;\r\n    let studentLink = this.mapStudents(students, manuallyAssignedStudents);\r\n    return (\r\n      <div className='manual-project-assignment'>\r\n        <label className='title'>Manually Assigned Students</label>\r\n        <CardDeck className='tables-container'>\r\n          <Card className='table-card' border='dark'>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n                <tr>\r\n                  <th style={{ width: '8%' }}></th>\r\n                  <th style={{ width: '20%' }}>Name</th>\r\n                  <th style={{ width: '20%' }}>NetID</th>\r\n                  <th style={{ width: '42%' }}>Project Name</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {studentLink.map((listValue, index) => {\r\n                  return (\r\n                    <tr key={index} data-item={listValue} onClick={this.onClickHandler.bind(this, index)}>\r\n                      <td style={{ textAlign: 'center' }}>\r\n                        <input\r\n                          id={'checkbox' + index}\r\n                          className='messageCheckbox'\r\n                          type='checkbox'\r\n                          name='box'\r\n                          value={index}\r\n                          onClick={this.onClickHandler.bind(this, index)}\r\n                        ></input>\r\n                      </td>\r\n                      <td>{listValue.name}</td>\r\n                      <td>{listValue.id}</td>\r\n                      <td>{manuallyAssignedStudents[listValue.id]}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </Table>\r\n          </Card>\r\n        </CardDeck>\r\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n          <button\r\n            className='delete-button'\r\n            type='submit'\r\n            onClick={() => this.delete(studentLink, manuallyAssignedStudents)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMAS.propTypes = {\r\n  students: PropTypes.array,\r\n  manuallyAssignedStudents: PropTypes.object,\r\n  changeStudentsArray: PropTypes.func,\r\n  removeStudent: PropTypes.func\r\n};\r\n","import React from 'react';\r\nimport { Card, Table, CardDeck } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class ManuallyAssignProjects extends React.Component {\r\n  addProjectToStudent = () => {\r\n    const { projects, students } = this.props;\r\n    let projectByStudentId = {};\r\n\r\n    var j = 0;\r\n\r\n    //Get name of selected project\r\n    let projectName = null;\r\n    for (let project of projects) {\r\n      if (document.getElementById(project.name).checked) {\r\n        projectName = project.name;\r\n        break;\r\n      }\r\n    }\r\n\r\n    //Exit function if no projects were selected\r\n    if (!projectName) {\r\n      return;\r\n    }\r\n    document.getElementById(projectName).checked = false;\r\n\r\n    //Map checked students to checked project\r\n    for (var i = 0; i < students.length; i++) {\r\n      var currStudentID = students[i]['id'];\r\n\r\n      if (document.getElementById(currStudentID) && document.getElementById(currStudentID).checked) {\r\n        document.getElementById(currStudentID).checked = false;\r\n        projectByStudentId[currStudentID] = projectName;\r\n      }\r\n    }\r\n    this.props.assignProjToStudents(projectByStudentId);\r\n  };\r\n\r\n  //Handle clicks on table row to effect associated checkbox\r\n  onProjectClickHandler = name => {\r\n    this.props.projects.forEach(project => {\r\n      document.getElementById(project.name).checked = false;\r\n    });\r\n    document.getElementById(name).checked = !document.getElementById(name).checked;\r\n  };\r\n\r\n  onStudentClickHandler = id => {\r\n    document.getElementById(id).checked = !document.getElementById(id).checked;\r\n  };\r\n\r\n  render() {\r\n    const { students, projects, manuallyAssignedStudents } = this.props;\r\n    return (\r\n      <div className='manual-project-assignment'>\r\n        <label className='title'>Manual Project Assignment</label>\r\n        <CardDeck className='tables-container'>\r\n          <Card className='table-card' border='dark'>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n                <tr>\r\n                  <th style={{ width: '15%' }}></th>\r\n                  <th>Project Name</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {projects.map((project, index) => {\r\n                  return (\r\n                    <tr key={index} onClick={this.onProjectClickHandler.bind(this, project.name)}>\r\n                      <td>\r\n                        <input\r\n                          type='checkbox'\r\n                          onClick={this.onProjectClickHandler.bind(this, project.name)}\r\n                          defaultChecked={false}\r\n                          id={project.name}\r\n                        />\r\n                      </td>\r\n                      <td>{project.name}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </Table>\r\n          </Card>\r\n          <Card className='table-card' border='dark'>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n                <tr>\r\n                  <th style={{ width: '15%' }}></th>\r\n                  <th>Name</th>\r\n                  <th>NetID</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {students.map((student, index) => {\r\n                  //If student has already been assigned, don't show them on table\r\n                  for (let id in manuallyAssignedStudents) {\r\n                    if (parseInt(id) === student.id) {\r\n                      return null;\r\n                    }\r\n                  }\r\n                  return (\r\n                    <tr key={index} onClick={this.onStudentClickHandler.bind(this, student.id)}>\r\n                      <td>\r\n                        <input\r\n                          type='checkbox'\r\n                          className='studentBox'\r\n                          defaultChecked={false}\r\n                          id={student.id}\r\n                          onClick={this.onStudentClickHandler.bind(this, student.id)}\r\n                        />\r\n                      </td>\r\n                      <td>{student.name}</td>\r\n                      <td>{student.id}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </Table>\r\n          </Card>\r\n        </CardDeck>\r\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n          <button className='green' style={{ width: '140px' }} onClick={this.addProjectToStudent}>\r\n            Add\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nManuallyAssignProjects.propTypes = {\r\n  students: PropTypes.array,\r\n  projects: PropTypes.array,\r\n  manuallyAssignedStudents: PropTypes.object,\r\n  assignProjToStudents: PropTypes.func\r\n};\r\n","import React, { Component } from 'react';\r\nimport XLSX from 'xlsx';\r\nimport PropTypes from 'prop-types';\r\nimport Dropzone from 'react-dropzone';\r\n\r\nclass ExcelReader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      projectFileName: 'Or drag file here',\r\n      studentFileName: 'Or drag file here'\r\n    };\r\n\r\n    this.projectInputRef = React.createRef();\r\n    this.studentInputRef = React.createRef();\r\n    this.projectBtnRef = React.createRef();\r\n    this.studentBtnRef = React.createRef();\r\n    this.handleChangeProjects = this.handleChangeProjects.bind(this);\r\n    this.handleChangeStudents = this.handleChangeStudents.bind(this);\r\n  }\r\n\r\n  getExtension = fileName => {\r\n    let temp = fileName.split('.');\r\n    return temp[temp.length - 1];\r\n  };\r\n\r\n  handleChangeProjects(e) {\r\n    const files = e.target.files;\r\n    if (files && files[0]) {\r\n      if (this.getExtension(files[0].name) !== 'xlsx') {\r\n        //Remove file from input component\r\n        e.target.value = '';\r\n        return alert('File must be of type xlsx');\r\n      }\r\n      this.setState({ projectFileName: files[0].name });\r\n      this.handleProjectFile(files[0]);\r\n    }\r\n    this.projectBtnRef.current.blur();\r\n  }\r\n\r\n  handleChangeStudents(e) {\r\n    const files = e.target.files;\r\n    if (files && files[0]) {\r\n      if (this.getExtension(files[0].name) !== 'xlsx') {\r\n        //Remove file from input component\r\n        e.target.value = '';\r\n        return alert('File must be of type xlsx');\r\n      }\r\n      this.setState({ studentFileName: files[0].name });\r\n      this.handleStudentFile(files[0]);\r\n    }\r\n    this.studentBtnRef.current.blur();\r\n  }\r\n\r\n  handleProjectFile(file) {\r\n    /* Boilerplate to set up FileReader */\r\n    const reader = new FileReader();\r\n    const rABS = !!reader.readAsBinaryString;\r\n\r\n    reader.onload = e => {\r\n      /* Parse data */\r\n      const bstr = e.target.result;\r\n      const wb = XLSX.read(bstr, {\r\n        type: rABS ? 'binary' : 'array',\r\n        bookVBA: true\r\n      });\r\n      /* Get first worksheet */\r\n      const wsname = wb.SheetNames[0];\r\n      const ws = wb.Sheets[wsname];\r\n      /* Convert array of arrays */\r\n      const data = XLSX.utils.sheet_to_json(ws);\r\n\r\n      let tempContainer = {\r\n        file: file,\r\n        data\r\n      };\r\n\r\n      //Check for correct columns in project file\r\n      let expectedColNames = ['Skill 1', 'Skill 2', 'Skill 3', 'Returning (Y/N)', 'Project Name'];\r\n\r\n      let actualColNames = [];\r\n      const columnCount = XLSX.utils.decode_range(ws['!ref']).e.c + 1;\r\n      for (let i = 0; i < columnCount; ++i) {\r\n        actualColNames[i] = ws[`${XLSX.utils.encode_col(i)}1`].v;\r\n      }\r\n\r\n      let error = expectedColNames.reduce((accumalator, name) => {\r\n        if (!actualColNames.includes(name)) {\r\n          accumalator += ' ' + name + ',';\r\n        }\r\n        return accumalator;\r\n      }, 'Missing columns:');\r\n\r\n      if (error.length > 16) {\r\n        this.setState({ projectFileName: 'Or drag file here' });\r\n        return alert(error.slice(0, -1));\r\n      }\r\n\r\n      //Reduce file object down to new object with formatted data\r\n      let projectsArray = tempContainer.data.reduce((accumalator, project) => {\r\n        let skillsArray = [project['Skill 1'], project['Skill 2'], project['Skill 3']];\r\n\r\n        accumalator.push({\r\n          name: project['Project Name'] ? project['Project Name'] : 'N/A',\r\n          returning: project['Returning (Y/N)'] === 'Y',\r\n          skills: skillsArray[0] ? skillsArray : []\r\n        });\r\n        return accumalator;\r\n      }, []);\r\n\r\n      this.props.changeProjectsArray(projectsArray);\r\n    };\r\n\r\n    if (rABS) {\r\n      reader.readAsBinaryString(file);\r\n    } else {\r\n      reader.readAsArrayBuffer(file);\r\n    }\r\n  }\r\n\r\n  handleStudentFile(file) {\r\n    const { changeStudentsArray, setMaxPossibleChoices, maxPossibleChoices } = this.props;\r\n    /* Boilerplate to set up FileReader */\r\n    const reader = new FileReader();\r\n    const rABS = !!reader.readAsBinaryString;\r\n\r\n    reader.onload = e => {\r\n      /* Parse data */\r\n      const bstr = e.target.result;\r\n      const wb = XLSX.read(bstr, {\r\n        type: rABS ? 'binary' : 'array',\r\n        bookVBA: true\r\n      });\r\n      /* Get first worksheet */\r\n      const wsname = wb.SheetNames[0];\r\n      const ws = wb.Sheets[wsname];\r\n      /* Convert array of arrays */\r\n      const data = XLSX.utils.sheet_to_json(ws);\r\n\r\n      let tempContainer = {\r\n        file: file,\r\n        data\r\n      };\r\n\r\n      //                  Check for correct columns in student file\r\n      let expectedColNames = [\r\n        'Student',\r\n        'Response Date',\r\n        'SSO ID',\r\n        'Course',\r\n        'Student Major',\r\n        'Student Classification',\r\n        'Gender',\r\n        'Skill 1',\r\n        'Skill 2',\r\n        'Skill 3'\r\n      ];\r\n\r\n      let actualColNames = [];\r\n      const columnCount = XLSX.utils.decode_range(ws['!ref']).e.c + 1;\r\n      for (let i = 0; i < columnCount; ++i) {\r\n        actualColNames[i] = ws[`${XLSX.utils.encode_col(i)}1`].v;\r\n      }\r\n\r\n      let error = expectedColNames.reduce((accumalator, name) => {\r\n        if (!actualColNames.includes(name)) {\r\n          accumalator += ' ' + name + ',';\r\n        }\r\n        return accumalator;\r\n      }, 'Missing columns:');\r\n\r\n      if (error.length > 16) {\r\n        this.setState({ studentFileName: 'Or drag file here' });\r\n        return alert(error.slice(0, -1));\r\n      }\r\n\r\n      let minimumChoices = Number.POSITIVE_INFINITY;\r\n\r\n      //Reduce file object down to new object with formatted data\r\n      let studentsArray = tempContainer.data.reduce((accumalator, student) => {\r\n        if (student['Student Major']) {\r\n          var studentMajor = student['Student Major'].substring(\r\n            student['Student Major'].indexOf('::::') + 4,\r\n            student['Student Major'].length\r\n          );\r\n        }\r\n\r\n        let studentSkillsArray = [student['Skill 1'], student['Skill 2'], student['Skill 3']];\r\n\r\n        let i = 1;\r\n        let choiceArray = [];\r\n        while (student[`Choice ${i}`]) {\r\n          choiceArray.push(student[`Choice ${i}`]);\r\n          i++;\r\n        }\r\n\r\n        i--;\r\n        if (i && i < minimumChoices) {\r\n          minimumChoices = i;\r\n        }\r\n\r\n        accumalator.push({\r\n          name: student['Student'] ? student['Student'] : 'N/A',\r\n          response: student['Response Date'] ? true : false,\r\n          id: student['SSO ID'] ? student['SSO ID'] : 'N/A',\r\n          returning: student['Course'] === 'EPCS 3200',\r\n          choices: choiceArray,\r\n          major: studentMajor,\r\n          classification: student['Student Classification'] ? student['Student Classification'] : 'N/A',\r\n          gender: student['Gender'] ? student['Gender'] : 'N/A',\r\n          skills: studentSkillsArray[0] ? studentSkillsArray : [],\r\n          found_team: false,\r\n          choice_num_awarded: 0\r\n        });\r\n\r\n        return accumalator;\r\n      }, []);\r\n\r\n      changeStudentsArray(studentsArray);\r\n      setMaxPossibleChoices(minimumChoices);\r\n    };\r\n\r\n    if (rABS) {\r\n      reader.readAsBinaryString(file);\r\n    } else {\r\n      reader.readAsArrayBuffer(file);\r\n    }\r\n  }\r\n\r\n  onProjectInputClick = () => {\r\n    this.projectInputRef.current.click();\r\n  };\r\n\r\n  onStudentInputClick = () => {\r\n    this.studentInputRef.current.click();\r\n  };\r\n\r\n  //Setup file drops like a normal file input event\r\n  onProjectDrop = files => {\r\n    const event = { target: { files } };\r\n    this.handleChangeProjects(event);\r\n  };\r\n\r\n  onStudentDrop = files => {\r\n    const event = { target: { files } };\r\n    this.handleChangeStudents(event);\r\n  };\r\n\r\n  render() {\r\n    const { projectFileName, studentFileName } = this.state;\r\n\r\n    return (\r\n      <div className='file-uploader'>\r\n        <Dropzone onDrop={this.onProjectDrop}>\r\n          {({ getRootProps, getInputProps, isDragActive }) => (\r\n            <div {...getRootProps()} className={isDragActive ? 'drag-box' : ''}>\r\n              <input {...getInputProps()} disabled={true} />\r\n              <div className='upload-project'>\r\n                <button className='orange' onClick={this.onProjectInputClick} ref={this.projectBtnRef}>\r\n                  Upload Project Files\r\n                </button>\r\n                <input\r\n                  id='projectInput'\r\n                  type='file'\r\n                  accept='.xlsx'\r\n                  style={{ display: 'none' }}\r\n                  ref={this.projectInputRef}\r\n                  onChange={this.handleChangeProjects}\r\n                />\r\n                <label className='file-name-display'>{projectFileName}</label>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Dropzone>\r\n        <Dropzone onDrop={this.onStudentDrop}>\r\n          {({ getRootProps, getInputProps, isDragActive }) => (\r\n            <div {...getRootProps()} className={isDragActive ? 'drag-box' : ''}>\r\n              <input {...getInputProps()} disabled={true} />\r\n              <div className='upload-students'>\r\n                <button className='orange' onClick={this.onStudentInputClick} ref={this.studentBtnRef}>\r\n                  Upload Student Files\r\n                </button>\r\n                <input\r\n                  id='studentInput'\r\n                  type='file'\r\n                  accept='.xlsx'\r\n                  style={{ display: 'none' }}\r\n                  ref={this.studentInputRef}\r\n                  onChange={this.handleChangeStudents}\r\n                />\r\n                <label className='file-name-display'>{studentFileName}</label>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Dropzone>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nExcelReader.propTypes = {\r\n  changeProjectsArray: PropTypes.func,\r\n  changeStudentsArray: PropTypes.func,\r\n  setMaxPossibleChoices: PropTypes.func,\r\n  maxPossibleChoices: PropTypes.number\r\n};\r\nexport default ExcelReader;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Nouislider from 'react-nouislider';\r\n\r\nfunction PreferredProjectsSlider({ numOfPrefProjects, maxPossibleChoices, changeNumOfPreferredProjects }) {\r\n  const [checked, setChecked] = useState(true);\r\n  const sliderRef = React.createRef();\r\n\r\n  const switchChecked = () => {\r\n    if (!checked) {\r\n      changeNumOfPreferredProjects(maxPossibleChoices);\r\n    }\r\n    setChecked(!checked);\r\n  };\r\n\r\n  const moveSlider = (render, handle, value) => {\r\n    setChecked(false);\r\n    changeNumOfPreferredProjects(value[0]);\r\n  };\r\n\r\n  return (\r\n    <div className='preferred-project-slider'>\r\n      <h5>Number of Preferred Projects:</h5>\r\n      <Nouislider\r\n        instanceRef={sliderRef}\r\n        range={{ min: 1, max: maxPossibleChoices ? maxPossibleChoices : 2 }}\r\n        start={[numOfPrefProjects]}\r\n        pips={{ mode: 'steps', density: 16 }}\r\n        step={1}\r\n        onSlide={moveSlider}\r\n        disabled={maxPossibleChoices ? false : true}\r\n      />\r\n      <div className='auto-checkbox-container'>\r\n        <label>Auto Max</label>\r\n        <input\r\n          type='checkbox'\r\n          className='checkbox'\r\n          onChange={switchChecked}\r\n          checked={checked}\r\n          disabled={maxPossibleChoices ? false : true}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nPreferredProjectsSlider.propTypes = {\r\n  numOfPrefProjects: PropTypes.number,\r\n  maxPossibleChoices: PropTypes.number,\r\n  changeNumOfPreferredProjects: PropTypes.func\r\n};\r\nexport default PreferredProjectsSlider;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Header from '../../common/Header';\r\nimport MAS from './ManuallyAssignedStudents';\r\nimport ManuallyAssignProjects from './ManuallyAssignProjects';\r\nimport ExcelReader from './ExcelReader';\r\nimport PreferredProjectsSlider from './PreferredProjectsSlider';\r\n\r\nclass SetupPage extends React.Component {\r\n  generateTeams = () => {\r\n    const { students, projects, manuallyAssignedStudents, numOfPrefProjects } = this.props;\r\n    this.props.switchToTeamBuilder();\r\n    this.props.generateTeams({\r\n      students,\r\n      projects,\r\n      manuallyAssignedStudents,\r\n      numOfPrefProjects\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      numOfPrefProjects,\r\n      students,\r\n      projects,\r\n      assignProjToStudents,\r\n      changeStudentsArray,\r\n      changeProjectsArray,\r\n      manuallyAssignedStudents,\r\n      removeStudent,\r\n      setMaxPossibleChoices,\r\n      maxPossibleChoices,\r\n      changeNumOfPreferredProjects\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className='setup-page'>\r\n        <Header />\r\n        <div className='setup-grid'>\r\n          <ExcelReader\r\n            changeStudentsArray={changeStudentsArray}\r\n            changeProjectsArray={changeProjectsArray}\r\n            setMaxPossibleChoices={setMaxPossibleChoices}\r\n            maxPossibleChoices={maxPossibleChoices}\r\n          />\r\n\r\n          <ManuallyAssignProjects\r\n            students={students}\r\n            projects={projects}\r\n            assignProjToStudents={assignProjToStudents}\r\n            changeStudentsArray={changeStudentsArray}\r\n            manuallyAssignedStudents={manuallyAssignedStudents}\r\n          />\r\n          <div className='manually-assigned-students'>\r\n            <MAS\r\n              students={students}\r\n              manuallyAssignedStudents={manuallyAssignedStudents}\r\n              removeStudent={removeStudent}\r\n            />\r\n          </div>\r\n        </div>\r\n        <PreferredProjectsSlider\r\n          numOfPrefProjects={numOfPrefProjects}\r\n          onSlide={this.onSlide}\r\n          maxPossibleChoices={maxPossibleChoices}\r\n          changeNumOfPreferredProjects={changeNumOfPreferredProjects}\r\n        />\r\n        <button className='orange generate-teams-btn' onClick={this.generateTeams}>\r\n          Build Teams\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSetupPage.defaultProps = {\r\n  numOfPrefProjects: 6,\r\n  students: [],\r\n  projects: [],\r\n  manuallyAssignedStudents: {}\r\n};\r\n\r\nSetupPage.propTypes = {\r\n  changeNumOfPreferredProjects: PropTypes.func,\r\n  students: PropTypes.array,\r\n  projects: PropTypes.array,\r\n  assignProjToStudents: PropTypes.func,\r\n  changeProjectsArray: PropTypes.func,\r\n  changeStudentsArray: PropTypes.func,\r\n  switchToTeamBuilder: PropTypes.func,\r\n  setMaxPossibleChoices: PropTypes.func,\r\n  manuallyAssignedStudents: PropTypes.object,\r\n  generateTeams: PropTypes.func,\r\n  removeStudent: PropTypes.func,\r\n  numOfPrefProjects: PropTypes.number,\r\n  maxPossibleChoices: PropTypes.number\r\n};\r\n\r\nexport default SetupPage;\r\n","import { INITIATE_TEAM_GENERATION } from './actionTypes/teamBuilderActionTypes';\r\nimport { SELECT_TEAM_COMBINATION } from './actionTypes/teamBuilderActionTypes';\r\n\r\nexport const generateTeams = ({ projects, students, manuallyAssignedStudents, numOfPrefProjects }) => {\r\n  const teams = {};\r\n\r\n  projects.forEach(project => {\r\n    teams[`${project.name}`] = {\r\n      project,\r\n      members: [],\r\n      value: 0\r\n    };\r\n  });\r\n\r\n  //First assign manually assigned students\r\n  for (let sid in manuallyAssignedStudents) {\r\n    //Change students to map from sid to their info\r\n    for (let i = 0; i < students.length; i++) {\r\n      if (parseInt(students[i].id) === parseInt(sid)) {\r\n        students[i].assigned = true;\r\n        teams[manuallyAssignedStudents[sid]].members.push(students[i]);\r\n        students.splice(i, 1);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  //Pull out all students who did not respond\r\n  let noResponseStudents = students.filter(student => !student.response);\r\n  students = students.filter(student => student.response);\r\n\r\n  //Let returning students get priority in project choice first\r\n  for (let i = 0; i < students.length; i++) {\r\n    if (students[i].returning) {\r\n      for (let j = 0; j < students[i].choices.length; j++) {\r\n        if (teams[`${students[i].choices[j]}`].members.length < 5) {\r\n          students[i].choice_num_awarded = j + 1;\r\n          teams[`${students[i].choices[j]}`].members.push(students[i]);\r\n          students.splice(i, 1);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  let teamCombos = [];\r\n  //Loop through creation of teams\r\n  for (let i = 0; i < 100; i++) {\r\n    //Make copies to start off on\r\n    let randomStudents = JSON.parse(JSON.stringify(students));\r\n    let newTeams = JSON.parse(JSON.stringify(teams));\r\n\r\n    //Shuffle students to hopefully get different results\r\n    for (var k = randomStudents.length - 1; k > 0; k--) {\r\n      var j = Math.floor(Math.random() * (k + 1));\r\n      var temp = randomStudents[k];\r\n      randomStudents[k] = randomStudents[j];\r\n      randomStudents[j] = temp;\r\n    }\r\n\r\n    //Place normal students in their top choices if possible\r\n    for (let j = randomStudents.length - 1; j >= 0; j--) {\r\n      for (let k = 0; k < numOfPrefProjects; k++) {\r\n        if (randomStudents[j].choices[k]) {\r\n          if (newTeams[`${randomStudents[j].choices[k]}`].members.length < 5) {\r\n            randomStudents[j].choice_num_awarded = k + 1;\r\n            newTeams[`${randomStudents[j].choices[k]}`].members.push(randomStudents[j]);\r\n            randomStudents.splice(j, 1);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    //Try to find teams for students who still have not been placed on a team\r\n    for (let j = randomStudents.length - 1; j >= 0; j--) {\r\n      if (findTeamForStudent(randomStudents[j], newTeams, numOfPrefProjects)) {\r\n        randomStudents.splice(j, 1);\r\n      }\r\n    }\r\n\r\n    //Check if a student couldn't be assigned to any of their choices\r\n    if (randomStudents.length > 1) {\r\n      console.log('Students who responded could not be placed on team based on choices');\r\n    }\r\n\r\n    let smallTeams = [];\r\n    let largeTeams = [];\r\n\r\n    //seperate trams into categories based on size\r\n    for (let teamName in newTeams) {\r\n      if (newTeams[teamName].members.length < 3) {\r\n        smallTeams.push(newTeams[teamName]);\r\n      } else if (newTeams[teamName].members.length > 3) {\r\n        largeTeams.push(newTeams[teamName]);\r\n      }\r\n    }\r\n\r\n    //go through every small team and check if students from larger teams can be swapped over\r\n    while (smallTeams.length > 0) {\r\n      let sTeam = smallTeams[0];\r\n      let sTeamFilled = false;\r\n\r\n      for (let j = largeTeams.length - 1; j >= 0; j--) {\r\n        let lTeam = largeTeams[j];\r\n\r\n        for (let k = lTeam.members.length - 1; k >= 0; k--) {\r\n          let member = lTeam.members[k];\r\n          if (member.returning || member.assigned) {\r\n            continue;\r\n          }\r\n\r\n          if (lTeam.members.length <= 3) {\r\n            largeTeams.pop();\r\n            break;\r\n          }\r\n\r\n          member.choices.forEach((choice, ind) => {\r\n            if (choice === sTeam.project.name) {\r\n              member.choice_num_awarded = ind + 1;\r\n              newTeams[`${sTeam.project.name}`].members.push(member);\r\n              newTeams[`${lTeam.project.name}`].members.splice(k, 1);\r\n            }\r\n          });\r\n\r\n          if (newTeams[`${sTeam.project.name}`].members.length >= 3) {\r\n            sTeamFilled = true;\r\n            break;\r\n          }\r\n        }\r\n        if (sTeamFilled) break;\r\n      }\r\n      smallTeams.pop();\r\n    }\r\n    let unassignedReturn = 0;\r\n    let unassignedNormal = 0;\r\n    randomStudents.forEach(student => {\r\n      student.returning ? unassignedReturn++ : unassignedNormal++;\r\n    });\r\n\r\n    //Calculate weights for choices and classification\r\n    let teamAverageChoice = 0;\r\n    let teamAverageClass = 0;\r\n    let totalWeighedTeams = 0;\r\n    for (let team in newTeams) {\r\n      let teamTotalClass = 0;\r\n      let teamTotalChoice = 0;\r\n\r\n      //Filter out assigned and returning students from calculations\r\n      let teamMembers = newTeams[team].members.filter(student =>\r\n        student.returning || student.assigned ? false : true\r\n      );\r\n      if (teamMembers.length === 0) {\r\n        continue;\r\n      }\r\n\r\n      //Calculate the average choice and spread of students by classsification\r\n      teamMembers.forEach(student => {\r\n        teamTotalChoice += student.choice_num_awarded;\r\n        switch (student.classification) {\r\n          case 'Freshman':\r\n            teamTotalClass += -2;\r\n            break;\r\n          case 'Sophomore':\r\n            teamTotalClass += -1;\r\n            break;\r\n          case 'Junior':\r\n            teamTotalClass += 1;\r\n            break;\r\n          case 'Senior':\r\n            teamTotalClass += 2;\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n      teamAverageChoice += teamTotalChoice / teamMembers.length;\r\n      teamAverageClass += teamTotalClass / teamMembers.length;\r\n      totalWeighedTeams++;\r\n    }\r\n\r\n    //Value is the average choice a student is given\r\n    let avgScoreChoice = teamAverageChoice / totalWeighedTeams;\r\n    //Value is weight ranging from -2 to 2. 0 means perfectly balanced. Postive values mean team has more upper classmen.\r\n    //Negative values mean team has more lower classmen.\r\n    let avgScoreClass = teamAverageClass / totalWeighedTeams;\r\n\r\n    let skillsMet = 0;\r\n    let totalSkills = 0;\r\n\r\n    //For each team find how many skills are met by its members\r\n    for (let team in newTeams) {\r\n      newTeams[team].skillsMet = 0;\r\n      newTeams[team].project.skills.forEach(skill => {\r\n        let foundSkill = false;\r\n        for (let j = 0; j < newTeams[team].members.length; j++) {\r\n          for (let k = 0; k < newTeams[team].members[j].skills.length; k++) {\r\n            if (newTeams[team].members[j].skills[k] === skill) {\r\n              skillsMet++;\r\n              newTeams[team].skillsMet++;\r\n              foundSkill = true;\r\n              break;\r\n            }\r\n          }\r\n          if (foundSkill) break;\r\n        }\r\n        totalSkills++;\r\n      });\r\n    }\r\n\r\n    //ratio of how many skills of all the teams were met\r\n    let skillsMetRatio = skillsMet / totalSkills;\r\n\r\n    teamCombos.push({\r\n      teams: newTeams,\r\n      avgScoreChoice,\r\n      avgScoreClass,\r\n      skillsMetRatio,\r\n      unassignedReturn,\r\n      unassignedNormal,\r\n      noResponseStudents,\r\n      unassignedStudents: randomStudents\r\n    });\r\n  }\r\n\r\n  return {\r\n    type: INITIATE_TEAM_GENERATION,\r\n    payload: teamCombos\r\n  };\r\n};\r\n\r\nfunction findTeamForStudent(student, teams, numOfPrefProjects) {\r\n  //Iterate through student's choices\r\n  for (let i = 0; i < numOfPrefProjects && i < student.choices.length; i++) {\r\n    let team = teams[`${student.choices[i]}`];\r\n    //Check if member on team has another choice which they can switch to\r\n    for (let j = team.members.length - 1; j >= 0; j--) {\r\n      if (!team.members[j].returning && !team.members[j].assigned) {\r\n        for (let k = 0; k < numOfPrefProjects; k++) {\r\n          //If member can be moved to new team, move student and then add other student to team\r\n          if (teams[`${team.members[j].choices[k]}`].members.length < 5) {\r\n            team.members[j].choice_num_awarded = k + 1;\r\n            student.choice_num_awarded = i + 1;\r\n\r\n            teams[`${team.members[j].choices[k]}`].members.push(team.members[j]);\r\n            team.members.splice(j, 1);\r\n            team.members.push(student);\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nexport const selectCombination = value => {\r\n  return {\r\n    type: SELECT_TEAM_COMBINATION,\r\n    payload: value\r\n  };\r\n};\r\n","import SetupPage from '../components/SetupPage';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  changeNumOfPreferredProjects,\r\n  assignProjToStudents,\r\n  changeProjectsArray,\r\n  changeStudentsArray,\r\n  removeStudent,\r\n  setMaxPossibleChoices\r\n} from '../../../actions/setupPageActions.js';\r\n\r\nimport { generateTeams, selectCombination } from '../../../actions/teamBuilderPageActions';\r\nimport {\r\n  getNumOfPreferredProjects,\r\n  getStudents,\r\n  getProjects,\r\n  getManuallyAssignedStudents,\r\n  getMaxPossibleChoices\r\n} from '../../../reducers';\r\n\r\nconst mapStateToProps = state => ({\r\n  numOfPrefProjects: getNumOfPreferredProjects(state),\r\n  students: getStudents(state),\r\n  projects: getProjects(state),\r\n  manuallyAssignedStudents: getManuallyAssignedStudents(state),\r\n  maxPossibleChoices: getMaxPossibleChoices(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  changeNumOfPreferredProjects: value => dispatch(changeNumOfPreferredProjects(value)),\r\n  changeProjectsArray: value => dispatch(changeProjectsArray(value)),\r\n  changeStudentsArray: value => dispatch(changeStudentsArray(value)),\r\n  assignProjToStudents: value => dispatch(assignProjToStudents(value)),\r\n  removeStudent: value => dispatch(removeStudent(value)),\r\n  generateTeams: teamInformation => dispatch(generateTeams(teamInformation)),\r\n  selectCombination: comboInformation => dispatch(selectCombination(comboInformation)),\r\n  setMaxPossibleChoices: value => dispatch(setMaxPossibleChoices(value))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SetupPage);\r\n","import {\r\n  CHANGE_NUM_PROJECT_SLIDER,\r\n  CHANGE_PROJECTS_ARRAY,\r\n  CHANGE_STUDENTS_ARRAY,\r\n  ASSIGN_PROJ_TO_STUDENT,\r\n  REMOVE_STUDENT,\r\n  SET_MAX_POSSIBLE_CHOICES\r\n} from './actionTypes/setupPageActionTypes';\r\n\r\nexport const removeStudent = value => {\r\n  return {\r\n    type: REMOVE_STUDENT,\r\n    payload: value\r\n  };\r\n};\r\n\r\nexport const changeNumOfPreferredProjects = value => {\r\n  return {\r\n    type: CHANGE_NUM_PROJECT_SLIDER,\r\n    payload: value\r\n  };\r\n};\r\n\r\nexport const changeProjectsArray = value => {\r\n  return {\r\n    type: CHANGE_PROJECTS_ARRAY,\r\n    payload: value\r\n  };\r\n};\r\n\r\nexport const changeStudentsArray = value => {\r\n  return {\r\n    type: CHANGE_STUDENTS_ARRAY,\r\n    payload: value\r\n  };\r\n};\r\n\r\nexport const assignProjToStudents = value => {\r\n  return {\r\n    type: ASSIGN_PROJ_TO_STUDENT,\r\n    payload: value\r\n  };\r\n};\r\n\r\nexport const setMaxPossibleChoices = value => {\r\n  return {\r\n    type: SET_MAX_POSSIBLE_CHOICES,\r\n    payload: value\r\n  };\r\n};\r\n","import React, { useState } from 'react';\r\nconst Checkbox = () => {\r\n  const categories = [\r\n    { value: 'classification', display_name: 'Classification' },\r\n    { value: 'projectPreferrence', display_name: 'Project Preference' },\r\n    { value: 'skillmatch', display_name: 'Skill Match' }\r\n  ];\r\n  const [checked, setChecked] = useState([]);\r\n\r\n  const handleToggle = c => () => {\r\n    const currentCategoryName = checked.indexOf(c);\r\n    const newCheckedCategory = [...checked];\r\n    if (currentCategoryName === -1) {\r\n      newCheckedCategory.push(c);\r\n    } else {\r\n      newCheckedCategory.splice(currentCategoryName, 1);\r\n    }\r\n    console.log(newCheckedCategory);\r\n    setChecked(newCheckedCategory);\r\n  };\r\n\r\n  return categories.map((c, i) => (\r\n    <div className='px-4 font-weight-bold' key={i}>\r\n      <input\r\n        type='checkbox'\r\n        className='form-check-input'\r\n        onChange={handleToggle(c.value)}\r\n        value={checked.indexOf(c.value === -1)}\r\n      />\r\n      <label className='form-check-label ml-3'>{c.display_name}</label>\r\n    </div>\r\n  ));\r\n};\r\n\r\nexport default Checkbox;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction TeamComboRow({ combo, index, selectCombination }) {\r\n  const onSelectHandler = () => {\r\n    selectCombination(combo);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <td>\r\n        <div className='text-danger font-weight-bolder'>Combination {index + 1}</div>\r\n        <div>Avg Score Choice: {combo.avgScoreChoice.toFixed(2)}</div>\r\n        <div>Avg Score Class: {combo.avgScoreClass.toFixed(2)}</div>\r\n        <div>Skills Met Ratio: {combo.skillsMetRatio.toFixed(2)}</div>\r\n        {/* <div>Unassigned Return:  {combo.unassignedReturn}</div>\r\n                                            <div>Unassigned Return:  {combo.unassignedReturn}</div> */}\r\n        <div>Unassigned Student(s): {combo.unassignedStudents.length}</div>\r\n      </td>\r\n      <td>\r\n        <button onClick={onSelectHandler} className='dark-gray text-center' style={{ width: '8rem' }}>\r\n          Select\r\n        </button>\r\n      </td>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nTeamComboRow.propTypes = {\r\n  combo: PropTypes.object,\r\n  index: PropTypes.number,\r\n  selectCombination: PropTypes.func\r\n};\r\n\r\nexport default TeamComboRow;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Card, Table, CardDeck } from 'react-bootstrap';\r\nimport TeamComboRow from './TeamComboRow';\r\n\r\n/* eslint-disable react/prop-types */\r\nfunction DisplayTeamCombinations(props) {\r\n  const [selectedCombo, SetSelectedCombo] = React.useState({});\r\n  const [checked, setChecked] = React.useState([]);\r\n\r\n  const showCombinations = teamCombos => (\r\n    <div className='pb-4'>\r\n      <div className='px-3 text-info'>Total Combination: {teamCombos.length} </div>\r\n      <div className='teamcombination-wrapper p-3'>\r\n        <CardDeck className='tables-container'>\r\n          <Card className='table-card' border='dark'>\r\n            <Table striped bordered hover>\r\n              <tbody>\r\n                {teamCombos.map((combo, index) => {\r\n                  return (\r\n                    <tr key={index}>\r\n                      <TeamComboRow selectCombination={props.selectCombo} combo={combo} index={index} />\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </Table>\r\n          </Card>\r\n        </CardDeck>\r\n        <div className='text-center mt-3'>\r\n          <button onClick={props.regrenerateTeam} className='px-3 py-2 orange' style={{ borderRadius: '16px' }}>\r\n            Regenerate Teams\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return showCombinations(props.teamCombos);\r\n}\r\n/* eslint-enable react/prop-types */\r\n\r\nDisplayTeamCombinations.propTypes = {\r\n  selectCombination: PropTypes.func,\r\n  teamCombos: PropTypes.array,\r\n  onSeclectHandler: PropTypes.func,\r\n  regrenerateTeam: PropTypes.func\r\n};\r\n\r\nexport default DisplayTeamCombinations;\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction DisplayProjectRow({ combo, selectMember, teamName }) {\r\n  const onSelectHandlerMembers = () => {\r\n    selectMember(combo.teams[teamName]);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <td>\r\n        <div>{teamName}</div>\r\n      </td>\r\n      <td>\r\n        <div\r\n          onClick={onSelectHandlerMembers}\r\n          className='border p-2 shawdow bg-dark text-white mt-4 text-center'\r\n          style={{ cursor: 'pointer' }}\r\n        >\r\n          Select\r\n        </div>\r\n      </td>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nDisplayProjectRow.propTypes = {\r\n  combo: PropTypes.object,\r\n  selectMember: PropTypes.func,\r\n  teamName: PropTypes.string\r\n};\r\n\r\nexport default DisplayProjectRow;\r\n","/* eslint-disable react/jsx-key */\r\n/* eslint-disable react/prop-types */\r\nimport React from 'react';\r\nimport { Card, Table, CardDeck } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport DisplayProjectRow from './DisplayProjectRow';\r\n\r\nconst DisplayProjects = props => {\r\n  const { combo = {} } = props;\r\n\r\n  const onSelectHandlerMembers = members => {\r\n    props.selectMember(members);\r\n  };\r\n\r\n  const onSeclectHandler = teamCombos => (\r\n    <div className='pb-4'>\r\n      <div className='px-3 text-info'>\r\n        Total Projects: {teamCombos.teams ? <span>{Object.keys(teamCombos.teams).length}</span> : null}\r\n      </div>\r\n      <div className='teamcombination-wrapper p-3'>\r\n        <CardDeck className='tables-container'>\r\n          <Card className='table-card' border='dark'>\r\n            <Table striped bordered hover>\r\n              <tbody>\r\n                {combo.teams\r\n                  ? Object.keys(combo.teams).map((teamName, index) => (\r\n                      <tr key={index}>\r\n                        <DisplayProjectRow combo={combo} selectMember={props.selectMember} teamName={teamName} />\r\n                      </tr>\r\n                    ))\r\n                  : null}\r\n              </tbody>\r\n            </Table>\r\n          </Card>\r\n        </CardDeck>\r\n      </div>\r\n      <div>\r\n        <div className='text-center mt-3'>\r\n          <button onClick={props.exportBtn} className='px-3 py-2 orange' style={{ borderRadius: '16px' }}>\r\n            Export\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n  return <div>{onSeclectHandler(props.combo)}</div>;\r\n};\r\n\r\nDisplayProjects.propTypes = {\r\n  selectProjects: PropTypes.func,\r\n  teamCombos: PropTypes.array,\r\n  onSeclectHandlerMembers: PropTypes.func\r\n};\r\n\r\nexport default DisplayProjects;\r\n","/* eslint-disable react/prop-types */\r\nimport React from 'react';\r\nimport { Card, Table, CardDeck } from 'react-bootstrap';\r\nimport { Col } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DisplayTeamInformations = props => {\r\n  const onSeclectHandler = team => (\r\n    <div className='pb-4'>\r\n      <div className='px-3 text-info'>\r\n        {/* <div> {team.project?  (<span>{team.project.name}</span>) :null}</div> */}\r\n        Total Members: {team.members ? <span>{team.members.length}</span> : null}\r\n      </div>\r\n      <div className='teamcombination-wrapper p-3'>\r\n        <CardDeck className='tables-container'>\r\n          <Card className='table-card' border='dark'>\r\n            <Table striped bordered hover>\r\n              {team.project ? (\r\n                <tbody>\r\n                  <tr className='team-classmate-row'>\r\n                    <div className='text-danger font-weight-bolder'>Project Info: </div>\r\n                    <div>{team.project.name}</div>\r\n                    <div>Returning: {team.project.returning + ''}</div>\r\n                    <div>Skills: </div>\r\n                    <Col>\r\n                      {team.project.skills.map((skill, key) => (\r\n                        <div key={key}>\r\n                          {key + 1 + ': '}\r\n                          {skill}\r\n                        </div>\r\n                      ))}\r\n                    </Col>\r\n                  </tr>\r\n\r\n                  {team.members.map((member, index) => (\r\n                    <tr className='team-classmate-row' key={index}>\r\n                      {!index ? <div className='text-danger font-weight-bolder'>Student Info: </div> : null}\r\n                      <div>Name: {member.name}</div>\r\n                      <div>Id: {member.id}</div>\r\n                      <div>Major: {member.major}</div>\r\n                      <div>Year: {member.classification}</div>\r\n                      <div>Gender: {member.gender}</div>\r\n                      <div>Response: {'' + member.response}</div>\r\n                      <div>Choice: {member.choice_num_awarded}</div>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              ) : null}\r\n            </Table>\r\n          </Card>\r\n        </CardDeck>\r\n      </div>\r\n    </div>\r\n  );\r\n  return <div>{onSeclectHandler(props.mems)}</div>;\r\n};\r\n\r\nDisplayTeamInformations.propTypes = {\r\n  selectMembers: PropTypes.func,\r\n  teamCombos: PropTypes.array\r\n};\r\n\r\nexport default DisplayTeamInformations;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Header from '../../common/Header';\r\nimport CheckBox from '../components/CheckBox';\r\nimport DisplayTeamCombinations from './TeamCombinationTable/DisplayTeamCombinations';\r\nimport { Row, Col, Spinner } from 'react-bootstrap';\r\nimport DisplayProjects from './DisplayProjectsTable/DisplayProjects';\r\nimport DisplayTeamInformations from './DisplayTeamInformations';\r\n\r\nfunction TeamBuilderPage(props) {\r\n  const [loading, setLoading] = React.useState(false);\r\n  const { students, projects, manuallyAssignedStudents, numOfPrefProjects, teamCombos } = props;\r\n  const [combo, setCombo] = React.useState({});\r\n  const [mems, setMember] = React.useState({});\r\n\r\n  const regrenerateTeam = () => {\r\n    setLoading(true);\r\n    let timeout = setTimeout(() => {\r\n      setLoading(false);\r\n      return clearTimeout(timeout);\r\n    }, 1500);\r\n    console.log(numOfPrefProjects);\r\n    props.generateTeams({ students, projects, manuallyAssignedStudents, numOfPrefProjects });\r\n  };\r\n\r\n  const selectCombination = comboInformation => {\r\n    props.selectCombination(comboInformation);\r\n  };\r\n\r\n  const selectProjects = comboInformation => {\r\n    props.selectProjects(comboInformation);\r\n  };\r\n\r\n  const selectMembers = comboInformation => {\r\n    props.selectMembers(comboInformation);\r\n  };\r\n\r\n  const exportBtn = () => {\r\n    alert('Does not work!!');\r\n  };\r\n\r\n  const renderTopSection = () => (\r\n    <div className='team-builder-header-options'>\r\n      <button onClick={props.switchToSetup()} className='px-3 py-2 back-button green'>\r\n        Go Back\r\n      </button>\r\n      <div className='team-builder-attributes'>\r\n        <div className='font-weight-bolder py-2'>\r\n          <h3>Attribute Importance</h3>\r\n        </div>\r\n        <div className='d-md-flex md-flex-row justify-content-center'>\r\n          <CheckBox />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderLoading = () => (\r\n    <div style={{ height: '50vh' }} className='d-flex justify-content-center align-items-center'>\r\n      <Spinner animation='border' role='status' size='lg'></Spinner>\r\n    </div>\r\n  );\r\n\r\n  const renderTeamCombinations = () => (\r\n    <div className='team-combo-view'>\r\n      <div className='font-weight-bolder text-center'>\r\n        <h4>Team Combinations</h4>\r\n      </div>\r\n      <DisplayTeamCombinations\r\n        teamCombos={teamCombos}\r\n        selectCombination={selectCombination}\r\n        selectCombo={setCombo}\r\n        regrenerateTeam={regrenerateTeam}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  const renderViewProjects = () => (\r\n    // <div className='py-2' style={{ height: 'auto' }}>\r\n    <div className='team-combo-view'>\r\n      <div className='font-weight-bolder text-center '>\r\n        <h4>View Projects</h4>\r\n      </div>\r\n      <DisplayProjects\r\n        teamCombos={teamCombos}\r\n        combo={combo}\r\n        selectProjects={selectProjects}\r\n        selectMember={setMember}\r\n        selectMembers={selectMembers}\r\n        exportBtn={exportBtn}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  const renderTeamInformations = () => (\r\n    // <div className='py-2' style={{ height: 'auto' }}>\r\n    <div className='team-combo-view'>\r\n      <div className='font-weight-bolder text-center'>\r\n        <h4>Team Informations</h4>\r\n      </div>\r\n      <DisplayTeamInformations\r\n        teamCombos={teamCombos}\r\n        combo={combo}\r\n        mems={mems}\r\n        selectMembers={selectMembers}\r\n        selectMember={setMember}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className='team-builder-page'>\r\n      <Header />\r\n      {renderTopSection()}\r\n      <Row>\r\n        <Col xs={12} md={4} className='bg-light'>\r\n          {loading ? renderLoading() : renderTeamCombinations()}\r\n        </Col>\r\n        <Col xs={12} md={4} className='bg-light'>\r\n          {loading ? renderViewProjects() : renderViewProjects()}\r\n        </Col>\r\n        <Col xs={12} md={4} className='bg-light'>\r\n          {loading ? renderTeamInformations() : renderTeamInformations()}\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nTeamBuilderPage.propTypes = {\r\n  numOfPrefProjects: PropTypes.number,\r\n  students: PropTypes.array,\r\n  projects: PropTypes.array,\r\n  switchToSetup: PropTypes.func,\r\n  manuallyAssignedStudents: PropTypes.object,\r\n  teamCombos: PropTypes.array,\r\n  generateTeams: PropTypes.func,\r\n  selectCombination: PropTypes.func,\r\n  selectProjects: PropTypes.func,\r\n  selectMembers: PropTypes.func\r\n};\r\n\r\nexport default TeamBuilderPage;\r\n","import TeamBuilderPage from '../components/TeamBuilderPage';\r\nimport { connect } from 'react-redux';\r\nimport { generateTeams, selectCombination } from '../../../actions/teamBuilderPageActions';\r\nimport {\r\n  getNumOfPreferredProjects,\r\n  getStudents,\r\n  getProjects,\r\n  getManuallyAssignedStudents,\r\n  getTeamCombos\r\n} from '../../../reducers';\r\n\r\nconst mapStateToProps = state => ({\r\n  numOfPrefProjects: getNumOfPreferredProjects(state),\r\n  students: getStudents(state),\r\n  projects: getProjects(state),\r\n  manuallyAssignedStudents: getManuallyAssignedStudents(state),\r\n  teamCombos: getTeamCombos(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  generateTeams: teamInformation => dispatch(generateTeams(teamInformation)),\r\n  selectCombination: comboInformation => dispatch(selectCombination(comboInformation))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamBuilderPage);\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport SetupPage from './widgets/SetupPage/containers/SetupPageContainer';\r\nimport TeamBuilderPage from './widgets/TeamBuilderPage/containers/TeamBuilderPageContainer';\r\n\r\nexport default class EpicsTeamBuilder extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      showSetupPage: true\r\n    };\r\n  }\r\n\r\n  switchToTeamBuilder = () => {\r\n    this.setState({ showSetupPage: false });\r\n  };\r\n  switchToSetup = () => {\r\n    this.setState({ showSetupPage: true });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <div className='epics-team-builder'>\r\n          <div className='gray-background' />\r\n          {this.state.showSetupPage ? (\r\n            <SetupPage switchToTeamBuilder={this.switchToTeamBuilder} />\r\n          ) : (\r\n            <TeamBuilderPage switchToSetup={() => this.switchToSetup} />\r\n          )}\r\n        </div>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './sass/index.scss';\r\nimport '../node_modules/nouislider/distribute/nouislider.css';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport EpicsTeamBuilder from './EpicsTeamBuilder';\r\n\r\nReactDOM.render(<EpicsTeamBuilder />, document.getElementById('root'));\r\n"],"sourceRoot":""}