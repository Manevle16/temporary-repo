{"version":3,"sources":["widgets/common/Epics.png","reducers/setupPageReducer.js","actions/actionTypes/setupPageActionTypes.js","reducers/teamBuilderPageReducer.js","actions/actionTypes/teamBuilderActionTypes.js","reducers/index.js","store.js","widgets/common/Header.jsx","widgets/SetupPage/components/ManuallyAssignedStudents.jsx","widgets/SetupPage/components/ManuallyAssignProjects.jsx","widgets/SetupPage/components/ExcelReader.jsx","widgets/SetupPage/components/PreferredProjectsSlider.jsx","widgets/SetupPage/components/SetupPage.jsx","actions/teamBuilderPageActions.js","widgets/SetupPage/containers/SetupPageContainer.jsx","actions/setupPageActions.js","widgets/TeamBuilderPage/components/AttributeCheckboxes.jsx","widgets/TeamBuilderPage/components/TeamCombinationTable/TeamComboRow.js","widgets/TeamBuilderPage/components/TeamCombinationTable/DisplayTeamCombinations.jsx","widgets/TeamBuilderPage/components/DisplayProjectsTable/DisplayProjectRow.js","widgets/TeamBuilderPage/components/DisplayProjectsTable/DisplayProjects.jsx","widgets/TeamBuilderPage/components/DisplayTeamInformations.jsx","widgets/TeamBuilderPage/components/TeamBuilderPage.jsx","widgets/TeamBuilderPage/containers/TeamBuilderPageContainer.jsx","EpicsTeamBuilder.jsx","index.js"],"names":["module","exports","combineReducers","students","state","type","payload","projects","manuallyAssignedStudents","numOfPreferredProjects","maxChoicesConsidered","getSelectedCombo","getTeamCombos","setupPage","setupPageReducer","teamCombos","teamBuilderPageReducer","getStudents","getProjects","getManuallyAssignedStudents","getNumOfPreferredProjects","getMaxPossibleChoices","middleware","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","Header","className","src","require","alt","React","Component","MAS","onClickHandler","index","document","getElementById","checked","SL","OS","copy","Object","assign","inputElements","getElementsByClassName","i","value","id","this","props","removeStudent","studentsAssigned","temp","keys","key","push","studentLink","mapStudents","CardDeck","Card","border","Table","striped","bordered","hover","style","width","map","listValue","data-item","onClick","bind","textAlign","name","display","justifyContent","delete","ManuallyAssignProjects","addProjectToStudent","projectByStudentId","projectName","project","length","currStudentID","assignProjToStudents","onProjectClickHandler","forEach","onStudentClickHandler","defaultChecked","student","parseInt","ExcelReader","getExtension","fileName","split","onProjectInputClick","projectInputRef","current","click","onStudentInputClick","studentInputRef","onProjectDrop","files","event","target","handleChangeProjects","onStudentDrop","handleChangeStudents","projectFileName","studentFileName","createRef","projectBtnRef","studentBtnRef","e","alert","setState","handleProjectFile","blur","handleStudentFile","file","reader","FileReader","rABS","readAsBinaryString","onload","bstr","result","wb","XLSX","read","bookVBA","wsname","SheetNames","ws","Sheets","data","utils","sheet_to_json","tempContainer","actualColNames","columnCount","decode_range","c","encode_col","v","error","reduce","accumalator","includes","slice","projectsArray","skillsArray","returning","skills","changeProjectsArray","readAsArrayBuffer","changeStudentsArray","setMaxPossibleChoices","minimumChoices","Number","POSITIVE_INFINITY","studentsArray","studentMajor","substring","indexOf","studentSkillsArray","choiceArray","response","choices","major","classification","gender","found_team","choice_num_awarded","onDrop","getRootProps","getInputProps","isDragActive","disabled","ref","accept","onChange","PreferredProjectsSlider","numOfPrefProjects","maxPossibleChoices","changeNumOfPreferredProjects","useState","setChecked","sliderRef","instanceRef","range","min","max","start","pips","mode","density","step","onSlide","render","handle","SetupPage","switchToTeamBuilder","defaultProps","findTeamForStudent","teams","team","j","members","assigned","k","splice","selectCombination","connect","dispatch","comboInformation","AttributeCheckboxes","handleToggle","currentCategoryName","newCheckedCategory","display_name","TeamComboRow","combo","selectTeam","Fragment","avgScoreChoice","toFixed","avgScoreClass","skillsMetRatio","coVarMembers","unassignedStudents","DisplayTeamCombinations","selectCombo","regrenerateTeam","loading","height","Spinner","animation","role","size","orderBy","noResponseStudents","marginTop","borderRadius","DisplayProjectRow","teamName","DisplayProjects","newData","membersArr","rowData","member","trim","choiceRows","s","skillSet","getCSV","headers","label","DisplayTeamInformations","Col","skill","TeamBuilderPage","setCombo","setTeam","setTimeout","waitToGenerateTeams","exportBtn","renderTopSection","switchToSetup","renderTeamCombinations","renderViewProjects","renderTeamInformations","prevProps","prevState","generateTeams","Row","xs","md","teamInformation","sid","filter","randomStudents","JSON","parse","stringify","newTeams","Math","floor","random","console","log","smallTeams","largeTeams","sTeam","sTeamFilled","lTeam","pop","choice","ind","unassignedReturn","unassignedNormal","teamAverageChoice","teamAverageClass","totalWeighedTeams","teamTotalClass","teamTotalChoice","teamMembers","abs","skillsMet","foundSkill","avgSkillsMet","exp","staDevSkillsMet","sqrt","skillsMetWeight","totalMembers","avgMembersPerTeam","EpicsTeamBuilder","showSetupPage","ReactDOM"],"mappings":"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","file":"static/js/main.8646fc5f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Epics.183416a8.png\";","import { combineReducers } from 'redux';\r\nimport {\r\n  CHANGE_NUM_PROJECT_SLIDER,\r\n  CHANGE_STUDENTS_ARRAY,\r\n  CHANGE_PROJECTS_ARRAY,\r\n  ASSIGN_PROJ_TO_STUDENT,\r\n  REMOVE_STUDENT,\r\n  SET_MAX_POSSIBLE_CHOICES\r\n} from '../actions/actionTypes/setupPageActionTypes';\r\n\r\nconst students = (state = [], { type, payload }) => {\r\n  switch (type) {\r\n    case CHANGE_STUDENTS_ARRAY:\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst projects = (state = [], { type, payload }) => {\r\n  switch (type) {\r\n    case CHANGE_PROJECTS_ARRAY:\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst manuallyAssignedStudents = (state = {}, { type, payload }) => {\r\n  switch (type) {\r\n    case REMOVE_STUDENT:\r\n      return payload;\r\n    case ASSIGN_PROJ_TO_STUDENT:\r\n      return {\r\n        ...state,\r\n        ...payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst numOfPreferredProjects = (state = 6, { type, payload }) => {\r\n  switch (type) {\r\n    case CHANGE_NUM_PROJECT_SLIDER:\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst maxChoicesConsidered = (state = 0, { type, payload }) => {\r\n  switch (type) {\r\n    case SET_MAX_POSSIBLE_CHOICES:\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  students,\r\n  projects,\r\n  manuallyAssignedStudents,\r\n  numOfPreferredProjects,\r\n  maxChoicesConsidered\r\n});\r\n","//Slider types\r\nexport const CHANGE_NUM_PROJECT_SLIDER = 'CHANGE_NUM_PROJECT_SLIDER';\r\nexport const CHANGE_PROJECTS_ARRAY = 'CHANGE_PROJECTS_ARRAY';\r\nexport const CHANGE_STUDENTS_ARRAY = 'CHANGE_STUDENT_ARRAY';\r\nexport const ASSIGN_PROJ_TO_STUDENT = 'ASSIGN_PROJ_TO_STUDENT';\r\nexport const REMOVE_STUDENT = 'REMOVE_STUDENT';\r\nexport const SET_MAX_POSSIBLE_CHOICES = 'SET_MAX_POSSIBLE_CHOICES';\r\n","import { combineReducers } from 'redux';\r\nimport { INITIATE_TEAM_GENERATION } from '../actions/actionTypes/teamBuilderActionTypes';\r\nimport { SELECT_TEAM_COMBINATION } from '../actions/actionTypes/teamBuilderActionTypes';\r\n\r\nconst getTeamCombos = (state = [], { type, payload }) => {\r\n  switch (type) {\r\n    case INITIATE_TEAM_GENERATION:\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst getSelectedCombo = (state = {}, { type, payload }) => {\r\n  switch (type) {\r\n    case SELECT_TEAM_COMBINATION:\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  getSelectedCombo,\r\n  getTeamCombos\r\n});\r\n","export const INITIATE_TEAM_GENERATION = 'INITIATE_TEAM_GENERATION';\r\nexport const SELECT_TEAM_COMBINATION = 'SELECT_TEAM_COMBINATION';\r\n","import { combineReducers } from 'redux';\r\nimport { createSelector } from 'reselect';\r\nimport setupPageReducer from './setupPageReducer';\r\nimport teamBuilderPageReducer from './teamBuilderPageReducer';\r\n\r\nexport default combineReducers({\r\n  setupPage: setupPageReducer,\r\n  teamCombos: teamBuilderPageReducer\r\n});\r\n\r\n//Setup Page Selectors\r\nexport const getStudents = state => state.setupPage.students;\r\nexport const getProjects = state => state.setupPage.projects;\r\nexport const getManuallyAssignedStudents = state => state.setupPage.manuallyAssignedStudents;\r\nexport const getNumOfPreferredProjects = state => state.setupPage.numOfPreferredProjects;\r\nexport const getMaxPossibleChoices = state => state.setupPage.maxChoicesConsidered;\r\n\r\n//Team Builder Page Selectors\r\nexport const getTeamCombos = state => state.teamCombos.getTeamCombos;\r\nexport const getSelectedCombo = state => state.teamCombos.getSelectedCombo;\r\n","import { applyMiddleware, createStore, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n\r\n  initialState,\r\n  composeEnhancers(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\n\r\nexport default class Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className='header-container'>\r\n        <div className='header'>\r\n          <img src={require('./Epics.png')} alt={\"EPIC's Logo\"} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Card, Table, CardDeck } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class MAS extends React.Component {\r\n  delete(SL, OS) {\r\n    var copy = Object.assign({}, OS);\r\n    var inputElements = document.getElementsByClassName('messageCheckbox');\r\n    for (var i = 0; inputElements[i]; ++i) {\r\n      if (inputElements[i].checked) {\r\n        delete copy[SL[inputElements[i].value].id];\r\n        inputElements[i].checked = false;\r\n      }\r\n    }\r\n    this.props.removeStudent(copy);\r\n  }\r\n\r\n  onClickHandler = index => {\r\n    if (document.getElementById('checkbox' + index).checked === true) {\r\n      document.getElementById('checkbox' + index).checked = false;\r\n    } else {\r\n      document.getElementById('checkbox' + index).checked = true;\r\n    }\r\n  };\r\n\r\n  mapStudents(students, studentsAssigned) {\r\n    var temp = [];\r\n    for (var key of Object.keys(students)) {\r\n      if (students[key].id in studentsAssigned) {\r\n        temp.push(students[key]);\r\n      }\r\n    }\r\n    return temp;\r\n  }\r\n  render() {\r\n    let { manuallyAssignedStudents, students } = this.props;\r\n    let studentLink = this.mapStudents(students, manuallyAssignedStudents);\r\n    return (\r\n      <div className='manual-project-assignment'>\r\n        <label className='title'>Manually Assigned Students</label>\r\n        <CardDeck className='tables-container'>\r\n          <Card className='table-card' border='dark'>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n                <tr>\r\n                  <th style={{ width: '8%' }}></th>\r\n                  <th style={{ width: '20%' }}>Name</th>\r\n                  <th style={{ width: '20%' }}>NetID</th>\r\n                  <th style={{ width: '42%' }}>Project Name</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {studentLink.map((listValue, index) => {\r\n                  return (\r\n                    <tr key={index} data-item={listValue} onClick={this.onClickHandler.bind(this, index)}>\r\n                      <td style={{ textAlign: 'center' }}>\r\n                        <input\r\n                          id={'checkbox' + index}\r\n                          className='messageCheckbox'\r\n                          type='checkbox'\r\n                          name='box'\r\n                          value={index}\r\n                          onClick={this.onClickHandler.bind(this, index)}\r\n                        ></input>\r\n                      </td>\r\n                      <td>{listValue.name}</td>\r\n                      <td>{listValue.id}</td>\r\n                      <td>{manuallyAssignedStudents[listValue.id]}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </Table>\r\n          </Card>\r\n        </CardDeck>\r\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n          <button\r\n            className='red'\r\n            type='submit'\r\n            style={{ width: '140px' }}\r\n            onClick={() => this.delete(studentLink, manuallyAssignedStudents)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMAS.propTypes = {\r\n  students: PropTypes.array,\r\n  manuallyAssignedStudents: PropTypes.object,\r\n  changeStudentsArray: PropTypes.func,\r\n  removeStudent: PropTypes.func\r\n};\r\n","import React from 'react';\r\nimport { Card, Table, CardDeck } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class ManuallyAssignProjects extends React.Component {\r\n  addProjectToStudent = () => {\r\n    const { projects, students } = this.props;\r\n    let projectByStudentId = {};\r\n\r\n    //Get name of selected project\r\n    let projectName = null;\r\n    for (let project of projects) {\r\n      if (document.getElementById(project.name).checked) {\r\n        projectName = project.name;\r\n        break;\r\n      }\r\n    }\r\n\r\n    //Exit function if no projects were selected\r\n    if (!projectName) {\r\n      return;\r\n    }\r\n    document.getElementById(projectName).checked = false;\r\n\r\n    //Map checked students to checked project\r\n    for (var i = 0; i < students.length; i++) {\r\n      var currStudentID = students[i]['id'];\r\n\r\n      if (document.getElementById(currStudentID) && document.getElementById(currStudentID).checked) {\r\n        document.getElementById(currStudentID).checked = false;\r\n        projectByStudentId[currStudentID] = projectName;\r\n      }\r\n    }\r\n    this.props.assignProjToStudents(projectByStudentId);\r\n  };\r\n\r\n  //Handle clicks on table row to effect associated checkbox\r\n  onProjectClickHandler = name => {\r\n    this.props.projects.forEach(project => {\r\n      if (project.name !== name) {\r\n        document.getElementById(project.name).checked = false;\r\n      }\r\n    });\r\n    document.getElementById(name).checked = !document.getElementById(name).checked;\r\n  };\r\n\r\n  onStudentClickHandler = id => {\r\n    document.getElementById(id).checked = !document.getElementById(id).checked;\r\n  };\r\n\r\n  render() {\r\n    const { students, projects, manuallyAssignedStudents } = this.props;\r\n    return (\r\n      <div className='manual-project-assignment'>\r\n        <label className='title'>Manual Project Assignment</label>\r\n        <CardDeck className='tables-container'>\r\n          <Card className='table-card' border='dark'>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n                <tr>\r\n                  <th style={{ width: '15%' }}></th>\r\n                  <th>Project Name</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {projects.map((project, index) => {\r\n                  return (\r\n                    <tr key={index} onClick={this.onProjectClickHandler.bind(this, project.name)}>\r\n                      <td>\r\n                        <input\r\n                          type='radio'\r\n                          onClick={this.onProjectClickHandler.bind(this, project.name)}\r\n                          defaultChecked={false}\r\n                          id={project.name}\r\n                        />\r\n                      </td>\r\n                      <td>{project.name}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </Table>\r\n          </Card>\r\n          <Card className='table-card' border='dark'>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n                <tr>\r\n                  <th style={{ width: '15%' }}></th>\r\n                  <th>Name</th>\r\n                  <th>NetID</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {students.map((student, index) => {\r\n                  //If student has already been assigned, don't show them on table\r\n                  for (let id in manuallyAssignedStudents) {\r\n                    if (parseInt(id) === student.id) {\r\n                      return null;\r\n                    }\r\n                  }\r\n                  return (\r\n                    <tr key={index} onClick={this.onStudentClickHandler.bind(this, student.id)}>\r\n                      <td>\r\n                        <input\r\n                          type='checkbox'\r\n                          className='studentBox'\r\n                          defaultChecked={false}\r\n                          id={student.id}\r\n                          onClick={this.onStudentClickHandler.bind(this, student.id)}\r\n                        />\r\n                      </td>\r\n                      <td>{student.name}</td>\r\n                      <td>{student.id}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </Table>\r\n          </Card>\r\n        </CardDeck>\r\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n          <button className='green' style={{ width: '140px' }} onClick={this.addProjectToStudent}>\r\n            Add\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nManuallyAssignProjects.propTypes = {\r\n  students: PropTypes.array,\r\n  projects: PropTypes.array,\r\n  manuallyAssignedStudents: PropTypes.object,\r\n  assignProjToStudents: PropTypes.func\r\n};\r\n","import React, { Component } from 'react';\r\nimport XLSX from 'xlsx';\r\nimport PropTypes from 'prop-types';\r\nimport Dropzone from 'react-dropzone';\r\n\r\nclass ExcelReader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      projectFileName: 'Or drag file here',\r\n      studentFileName: 'Or drag file here'\r\n    };\r\n\r\n    this.projectInputRef = React.createRef();\r\n    this.studentInputRef = React.createRef();\r\n    this.projectBtnRef = React.createRef();\r\n    this.studentBtnRef = React.createRef();\r\n    this.handleChangeProjects = this.handleChangeProjects.bind(this);\r\n    this.handleChangeStudents = this.handleChangeStudents.bind(this);\r\n  }\r\n\r\n  getExtension = fileName => {\r\n    let temp = fileName.split('.');\r\n    return temp[temp.length - 1];\r\n  };\r\n\r\n  handleChangeProjects(e) {\r\n    const files = e.target.files;\r\n    if (files && files[0]) {\r\n      if (this.getExtension(files[0].name) !== 'xlsx') {\r\n        //Remove file from input component\r\n        e.target.value = '';\r\n        return alert('File must be of type xlsx');\r\n      }\r\n      this.setState({ projectFileName: files[0].name });\r\n      this.handleProjectFile(files[0]);\r\n    }\r\n    this.projectBtnRef.current.blur();\r\n  }\r\n\r\n  handleChangeStudents(e) {\r\n    const files = e.target.files;\r\n    if (files && files[0]) {\r\n      if (this.getExtension(files[0].name) !== 'xlsx') {\r\n        //Remove file from input component\r\n        e.target.value = '';\r\n        return alert('File must be of type xlsx');\r\n      }\r\n      this.setState({ studentFileName: files[0].name });\r\n      this.handleStudentFile(files[0]);\r\n    }\r\n    this.studentBtnRef.current.blur();\r\n  }\r\n\r\n  handleProjectFile(file) {\r\n    /* Boilerplate to set up FileReader */\r\n    const reader = new FileReader();\r\n    const rABS = !!reader.readAsBinaryString;\r\n\r\n    reader.onload = e => {\r\n      /* Parse data */\r\n      const bstr = e.target.result;\r\n      const wb = XLSX.read(bstr, {\r\n        type: rABS ? 'binary' : 'array',\r\n        bookVBA: true\r\n      });\r\n      /* Get first worksheet */\r\n      const wsname = wb.SheetNames[0];\r\n      const ws = wb.Sheets[wsname];\r\n      /* Convert array of arrays */\r\n      const data = XLSX.utils.sheet_to_json(ws);\r\n\r\n      let tempContainer = {\r\n        file: file,\r\n        data\r\n      };\r\n\r\n      //Check for correct columns in project file\r\n      let expectedColNames = ['Skill 1', 'Skill 2', 'Skill 3', 'Returning (Y/N)', 'Project Name'];\r\n\r\n      let actualColNames = [];\r\n      const columnCount = XLSX.utils.decode_range(ws['!ref']).e.c + 1;\r\n      for (let i = 0; i < columnCount; ++i) {\r\n        actualColNames[i] = ws[`${XLSX.utils.encode_col(i)}1`].v;\r\n      }\r\n\r\n      let error = expectedColNames.reduce((accumalator, name) => {\r\n        if (!actualColNames.includes(name)) {\r\n          accumalator += ' ' + name + ',';\r\n        }\r\n        return accumalator;\r\n      }, 'Missing columns:');\r\n\r\n      if (error.length > 16) {\r\n        this.setState({ projectFileName: 'Or drag file here' });\r\n        return alert(error.slice(0, -1));\r\n      }\r\n\r\n      //Reduce file object down to new object with formatted data\r\n      let projectsArray = tempContainer.data.reduce((accumalator, project) => {\r\n        let skillsArray = [project['Skill 1'], project['Skill 2'], project['Skill 3']];\r\n\r\n        accumalator.push({\r\n          name: project['Project Name'] ? project['Project Name'] : 'N/A',\r\n          returning: project['Returning (Y/N)'] === 'Y',\r\n          skills: skillsArray[0] ? skillsArray : []\r\n        });\r\n        return accumalator;\r\n      }, []);\r\n\r\n      this.props.changeProjectsArray(projectsArray);\r\n    };\r\n\r\n    if (rABS) {\r\n      reader.readAsBinaryString(file);\r\n    } else {\r\n      reader.readAsArrayBuffer(file);\r\n    }\r\n  }\r\n\r\n  handleStudentFile(file) {\r\n    const { changeStudentsArray, setMaxPossibleChoices } = this.props;\r\n    /* Boilerplate to set up FileReader */\r\n    const reader = new FileReader();\r\n    const rABS = !!reader.readAsBinaryString;\r\n\r\n    reader.onload = e => {\r\n      /* Parse data */\r\n      const bstr = e.target.result;\r\n      const wb = XLSX.read(bstr, {\r\n        type: rABS ? 'binary' : 'array',\r\n        bookVBA: true\r\n      });\r\n      /* Get first worksheet */\r\n      const wsname = wb.SheetNames[0];\r\n      const ws = wb.Sheets[wsname];\r\n      /* Convert array of arrays */\r\n      const data = XLSX.utils.sheet_to_json(ws);\r\n\r\n      let tempContainer = {\r\n        file: file,\r\n        data\r\n      };\r\n\r\n      //                  Check for correct columns in student file\r\n      let expectedColNames = [\r\n        'Student',\r\n        'Response Date',\r\n        'SSO ID',\r\n        'Course',\r\n        'Student Major',\r\n        'Student Classification',\r\n        'Gender',\r\n        'Skill 1',\r\n        'Skill 2',\r\n        'Skill 3'\r\n      ];\r\n\r\n      let actualColNames = [];\r\n      const columnCount = XLSX.utils.decode_range(ws['!ref']).e.c + 1;\r\n      for (let i = 0; i < columnCount; ++i) {\r\n        actualColNames[i] = ws[`${XLSX.utils.encode_col(i)}1`].v;\r\n      }\r\n\r\n      let error = expectedColNames.reduce((accumalator, name) => {\r\n        if (!actualColNames.includes(name)) {\r\n          accumalator += ' ' + name + ',';\r\n        }\r\n        return accumalator;\r\n      }, 'Missing columns:');\r\n\r\n      if (error.length > 16) {\r\n        this.setState({ studentFileName: 'Or drag file here' });\r\n        return alert(error.slice(0, -1));\r\n      }\r\n\r\n      let minimumChoices = Number.POSITIVE_INFINITY;\r\n\r\n      //Reduce file object down to new object with formatted data\r\n      let studentsArray = tempContainer.data.reduce((accumalator, student) => {\r\n        if (student['Student Major']) {\r\n          var studentMajor = student['Student Major'].substring(\r\n            student['Student Major'].indexOf('::::') + 4,\r\n            student['Student Major'].length\r\n          );\r\n        }\r\n\r\n        let studentSkillsArray = [student['Skill 1'], student['Skill 2'], student['Skill 3']];\r\n\r\n        let i = 1;\r\n        let choiceArray = [];\r\n        while (student[`Choice ${i}`]) {\r\n          choiceArray.push(student[`Choice ${i}`]);\r\n          i++;\r\n        }\r\n\r\n        i--;\r\n        if (i && i < minimumChoices) {\r\n          minimumChoices = i;\r\n        }\r\n\r\n        accumalator.push({\r\n          name: student['Student'] ? student['Student'] : 'N/A',\r\n          response: student['Response Date'] ? true : false,\r\n          id: student['SSO ID'] ? student['SSO ID'] : 'N/A',\r\n          returning: student['Course'] === 'EPCS 3200',\r\n          choices: choiceArray,\r\n          major: studentMajor,\r\n          classification: student['Student Classification'] ? student['Student Classification'] : 'N/A',\r\n          gender: student['Gender'] ? student['Gender'] : 'N/A',\r\n          skills: studentSkillsArray[0] ? studentSkillsArray : [],\r\n          found_team: false,\r\n          choice_num_awarded: 0\r\n        });\r\n\r\n        return accumalator;\r\n      }, []);\r\n\r\n      changeStudentsArray(studentsArray);\r\n      setMaxPossibleChoices(minimumChoices);\r\n    };\r\n\r\n    if (rABS) {\r\n      reader.readAsBinaryString(file);\r\n    } else {\r\n      reader.readAsArrayBuffer(file);\r\n    }\r\n  }\r\n\r\n  onProjectInputClick = () => {\r\n    this.projectInputRef.current.click();\r\n  };\r\n\r\n  onStudentInputClick = () => {\r\n    this.studentInputRef.current.click();\r\n  };\r\n\r\n  //Setup file drops like a normal file input event\r\n  onProjectDrop = files => {\r\n    const event = { target: { files } };\r\n    this.handleChangeProjects(event);\r\n  };\r\n\r\n  onStudentDrop = files => {\r\n    const event = { target: { files } };\r\n    this.handleChangeStudents(event);\r\n  };\r\n\r\n  render() {\r\n    const { projectFileName, studentFileName } = this.state;\r\n\r\n    return (\r\n      <div className='file-uploader'>\r\n        <Dropzone onDrop={this.onProjectDrop}>\r\n          {({ getRootProps, getInputProps, isDragActive }) => (\r\n            <div {...getRootProps()} className={isDragActive ? 'drag-box' : ''}>\r\n              <input {...getInputProps()} disabled={true} />\r\n              <div className='upload-project'>\r\n                <button className='orange' onClick={this.onProjectInputClick} ref={this.projectBtnRef}>\r\n                  Upload Project Files\r\n                </button>\r\n                <input\r\n                  id='projectInput'\r\n                  type='file'\r\n                  accept='.xlsx'\r\n                  style={{ display: 'none' }}\r\n                  ref={this.projectInputRef}\r\n                  onChange={this.handleChangeProjects}\r\n                />\r\n                <label className='file-name-display'>{projectFileName}</label>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Dropzone>\r\n        <Dropzone onDrop={this.onStudentDrop}>\r\n          {({ getRootProps, getInputProps, isDragActive }) => (\r\n            <div {...getRootProps()} className={isDragActive ? 'drag-box' : ''}>\r\n              <input {...getInputProps()} disabled={true} />\r\n              <div className='upload-students'>\r\n                <button className='orange' onClick={this.onStudentInputClick} ref={this.studentBtnRef}>\r\n                  Upload Student Files\r\n                </button>\r\n                <input\r\n                  id='studentInput'\r\n                  type='file'\r\n                  accept='.xlsx'\r\n                  style={{ display: 'none' }}\r\n                  ref={this.studentInputRef}\r\n                  onChange={this.handleChangeStudents}\r\n                />\r\n                <label className='file-name-display'>{studentFileName}</label>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Dropzone>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nExcelReader.propTypes = {\r\n  changeProjectsArray: PropTypes.func,\r\n  changeStudentsArray: PropTypes.func,\r\n  setMaxPossibleChoices: PropTypes.func,\r\n  maxPossibleChoices: PropTypes.number\r\n};\r\nexport default ExcelReader;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Nouislider from 'react-nouislider';\r\n\r\nfunction PreferredProjectsSlider({ numOfPrefProjects, maxPossibleChoices, changeNumOfPreferredProjects }) {\r\n  const [checked, setChecked] = useState(true);\r\n  const sliderRef = React.createRef();\r\n\r\n  const switchChecked = () => {\r\n    if (!checked) {\r\n      changeNumOfPreferredProjects(maxPossibleChoices);\r\n    }\r\n    setChecked(!checked);\r\n  };\r\n\r\n  const moveSlider = (render, handle, value) => {\r\n    setChecked(false);\r\n    changeNumOfPreferredProjects(value[0]);\r\n  };\r\n\r\n  return (\r\n    <div className='preferred-project-slider'>\r\n      <h5>Number of Preferred Projects:</h5>\r\n      <Nouislider\r\n        instanceRef={sliderRef}\r\n        range={{ min: 1, max: maxPossibleChoices ? maxPossibleChoices : 2 }}\r\n        start={[numOfPrefProjects]}\r\n        pips={{ mode: 'steps', density: 16 }}\r\n        step={1}\r\n        onSlide={moveSlider}\r\n        disabled={maxPossibleChoices ? false : true}\r\n      />\r\n      <div className='auto-checkbox-container'>\r\n        <label>Auto Max</label>\r\n        <input\r\n          type='checkbox'\r\n          className='checkbox'\r\n          onChange={switchChecked}\r\n          checked={checked}\r\n          disabled={maxPossibleChoices ? false : true}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nPreferredProjectsSlider.propTypes = {\r\n  numOfPrefProjects: PropTypes.number,\r\n  maxPossibleChoices: PropTypes.number,\r\n  changeNumOfPreferredProjects: PropTypes.func\r\n};\r\nexport default PreferredProjectsSlider;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Header from '../../common/Header';\r\nimport MAS from './ManuallyAssignedStudents';\r\nimport ManuallyAssignProjects from './ManuallyAssignProjects';\r\nimport ExcelReader from './ExcelReader';\r\nimport PreferredProjectsSlider from './PreferredProjectsSlider';\r\n\r\nclass SetupPage extends React.Component {\r\n  render() {\r\n    const {\r\n      numOfPrefProjects,\r\n      students,\r\n      projects,\r\n      assignProjToStudents,\r\n      changeStudentsArray,\r\n      changeProjectsArray,\r\n      manuallyAssignedStudents,\r\n      removeStudent,\r\n      setMaxPossibleChoices,\r\n      maxPossibleChoices,\r\n      changeNumOfPreferredProjects,\r\n      switchToTeamBuilder\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className='setup-page'>\r\n        <Header />\r\n        <div className='setup-grid'>\r\n          <ExcelReader\r\n            changeStudentsArray={changeStudentsArray}\r\n            changeProjectsArray={changeProjectsArray}\r\n            setMaxPossibleChoices={setMaxPossibleChoices}\r\n            maxPossibleChoices={maxPossibleChoices}\r\n          />\r\n\r\n          <ManuallyAssignProjects\r\n            students={students}\r\n            projects={projects}\r\n            assignProjToStudents={assignProjToStudents}\r\n            changeStudentsArray={changeStudentsArray}\r\n            manuallyAssignedStudents={manuallyAssignedStudents}\r\n          />\r\n          <div className='manually-assigned-students'>\r\n            <MAS\r\n              students={students}\r\n              manuallyAssignedStudents={manuallyAssignedStudents}\r\n              removeStudent={removeStudent}\r\n            />\r\n          </div>\r\n        </div>\r\n        <PreferredProjectsSlider\r\n          numOfPrefProjects={numOfPrefProjects}\r\n          onSlide={this.onSlide}\r\n          maxPossibleChoices={maxPossibleChoices}\r\n          changeNumOfPreferredProjects={changeNumOfPreferredProjects}\r\n        />\r\n        <button\r\n          className='orange generate-teams-btn'\r\n          onClick={switchToTeamBuilder}\r\n          disabled={students.length === 0 || projects.length === 0}\r\n        >\r\n          Build Teams\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSetupPage.defaultProps = {\r\n  numOfPrefProjects: 6,\r\n  students: [],\r\n  projects: [],\r\n  manuallyAssignedStudents: {}\r\n};\r\n\r\nSetupPage.propTypes = {\r\n  changeNumOfPreferredProjects: PropTypes.func,\r\n  students: PropTypes.array,\r\n  projects: PropTypes.array,\r\n  assignProjToStudents: PropTypes.func,\r\n  changeProjectsArray: PropTypes.func,\r\n  changeStudentsArray: PropTypes.func,\r\n  switchToTeamBuilder: PropTypes.func,\r\n  setMaxPossibleChoices: PropTypes.func,\r\n  manuallyAssignedStudents: PropTypes.object,\r\n  generateTeams: PropTypes.func,\r\n  removeStudent: PropTypes.func,\r\n  numOfPrefProjects: PropTypes.number,\r\n  maxPossibleChoices: PropTypes.number\r\n};\r\n\r\nexport default SetupPage;\r\n","import { INITIATE_TEAM_GENERATION } from './actionTypes/teamBuilderActionTypes';\r\nimport { SELECT_TEAM_COMBINATION } from './actionTypes/teamBuilderActionTypes';\r\n\r\nexport const generateTeams = ({ projects, students, manuallyAssignedStudents, numOfPrefProjects }) => {\r\n  const teams = {};\r\n\r\n  projects.forEach(project => {\r\n    teams[`${project.name}`] = {\r\n      project,\r\n      members: [],\r\n      value: 0\r\n    };\r\n  });\r\n\r\n  //First assign manually assigned students\r\n  for (let sid in manuallyAssignedStudents) {\r\n    //Change students to map from sid to their info\r\n    for (let i = 0; i < students.length; i++) {\r\n      if (parseInt(students[i].id) === parseInt(sid)) {\r\n        students[i].assigned = true;\r\n        teams[manuallyAssignedStudents[sid]].members.push(students[i]);\r\n        students.splice(i, 1);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  //Pull out all students who did not respond\r\n  let noResponseStudents = students.filter(student => !student.response);\r\n  students = students.filter(student => student.response);\r\n\r\n  //Let returning students get priority in project choice first\r\n  for (let i = 0; i < students.length; i++) {\r\n    if (students[i].returning) {\r\n      for (let j = 0; j < students[i].choices.length; j++) {\r\n        if (teams[`${students[i].choices[j]}`].members.length < 5) {\r\n          students[i].choice_num_awarded = j + 1;\r\n          teams[`${students[i].choices[j]}`].members.push(students[i]);\r\n          students.splice(i, 1);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  let teamCombos = [];\r\n  //Loop through creation of teams\r\n  for (let i = 0; i < 1000; i++) {\r\n    //Make copies to start off on\r\n    let randomStudents = JSON.parse(JSON.stringify(students));\r\n    let newTeams = JSON.parse(JSON.stringify(teams));\r\n\r\n    //Shuffle students to hopefully get different results\r\n    for (var k = randomStudents.length - 1; k > 0; k--) {\r\n      var j = Math.floor(Math.random() * (k + 1));\r\n      let temp = randomStudents[k];\r\n      randomStudents[k] = randomStudents[j];\r\n      randomStudents[j] = temp;\r\n    }\r\n\r\n    //Place normal students in their top choices if possible\r\n    for (let j = randomStudents.length - 1; j >= 0; j--) {\r\n      for (let k = 0; k < numOfPrefProjects; k++) {\r\n        if (randomStudents[j].choices[k]) {\r\n          if (newTeams[`${randomStudents[j].choices[k]}`].members.length < 3) {\r\n            randomStudents[j].choice_num_awarded = k + 1;\r\n            newTeams[`${randomStudents[j].choices[k]}`].members.push(randomStudents[j]);\r\n            randomStudents.splice(j, 1);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    //Try to find teams for students who still have not been placed on a team\r\n    for (let j = randomStudents.length - 1; j >= 0; j--) {\r\n      if (findTeamForStudent(randomStudents[j], newTeams, numOfPrefProjects)) {\r\n        randomStudents.splice(j, 1);\r\n      }\r\n    }\r\n\r\n    //Check if a student couldn't be assigned to any of their choices\r\n    if (randomStudents.length > 1) {\r\n      console.log('Students who responded could not be placed on team based on choices');\r\n    }\r\n\r\n    let smallTeams = [];\r\n    let largeTeams = [];\r\n\r\n    //seperate teams into categories based on size\r\n    for (let teamName in newTeams) {\r\n      if (newTeams[teamName].members.length < 3) {\r\n        smallTeams.push(newTeams[teamName]);\r\n      } else if (newTeams[teamName].members.length > 3) {\r\n        largeTeams.push(newTeams[teamName]);\r\n      }\r\n    }\r\n\r\n    //go through every small team and check if students from larger teams can be swapped over\r\n    while (smallTeams.length > 0) {\r\n      let sTeam = smallTeams[0];\r\n      let sTeamFilled = false;\r\n\r\n      for (let j = largeTeams.length - 1; j >= 0; j--) {\r\n        let lTeam = largeTeams[j];\r\n\r\n        for (let k = lTeam.members.length - 1; k >= 0; k--) {\r\n          let member = lTeam.members[k];\r\n          if (member.returning || member.assigned) {\r\n            continue;\r\n          }\r\n\r\n          if (lTeam.members.length <= 3) {\r\n            largeTeams.pop();\r\n            break;\r\n          }\r\n\r\n          member.choices.forEach((choice, ind) => {\r\n            if (choice === sTeam.project.name) {\r\n              member.choice_num_awarded = ind + 1;\r\n              newTeams[`${sTeam.project.name}`].members.push(member);\r\n              newTeams[`${lTeam.project.name}`].members.splice(k, 1);\r\n            }\r\n          });\r\n\r\n          if (newTeams[`${sTeam.project.name}`].members.length >= 3) {\r\n            sTeamFilled = true;\r\n            break;\r\n          }\r\n        }\r\n        if (sTeamFilled) break;\r\n      }\r\n      smallTeams.pop();\r\n    }\r\n    let unassignedReturn = 0;\r\n    let unassignedNormal = 0;\r\n    randomStudents.forEach(student => {\r\n      student.returning ? unassignedReturn++ : unassignedNormal++;\r\n    });\r\n\r\n    //Calculate weights for choices and classification\r\n    let teamAverageChoice = 0;\r\n    let teamAverageClass = 0;\r\n    let totalWeighedTeams = 0;\r\n    for (let team in newTeams) {\r\n      let teamTotalClass = 0;\r\n      let teamTotalChoice = 0;\r\n\r\n      //Filter out assigned and returning students from calculations\r\n      let teamMembers = newTeams[team].members.filter(student =>\r\n        student.returning || student.assigned ? false : true\r\n      );\r\n\r\n      if (teamMembers.length === 0) {\r\n        continue;\r\n      }\r\n\r\n      //Calculate the average choice and spread of students by classsification\r\n      teamMembers.forEach(student => {\r\n        teamTotalChoice += student.choice_num_awarded;\r\n        switch (student.classification) {\r\n          case 'Freshman':\r\n            teamTotalClass += -2;\r\n            break;\r\n          case 'Sophomore':\r\n            teamTotalClass += -1;\r\n            break;\r\n          case 'Junior':\r\n            teamTotalClass += 1;\r\n            break;\r\n          case 'Senior':\r\n            teamTotalClass += 2;\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n      teamAverageChoice += teamTotalChoice / teamMembers.length;\r\n      teamAverageClass += teamTotalClass / teamMembers.length;\r\n      totalWeighedTeams++;\r\n    }\r\n\r\n    //Value is the average choice a student is given. The lower the better\r\n\r\n    let avgScoreChoice = teamAverageChoice / totalWeighedTeams;\r\n    //Value is weight ranging from 0 to 1. The closer to 0, the better spread of students by grade\r\n    let avgScoreClass = Math.abs(teamAverageClass / totalWeighedTeams) / 2;\r\n\r\n    let skillsMet = 0;\r\n\r\n    //For each team find how many skills are met by its members\r\n    for (let team in newTeams) {\r\n      newTeams[team].skillsMet = 0;\r\n      newTeams[team].project.skills.forEach(skill => {\r\n        let foundSkill = false;\r\n        for (let j = 0; j < newTeams[team].members.length; j++) {\r\n          for (let k = 0; k < newTeams[team].members[j].skills.length; k++) {\r\n            if (newTeams[team].members[j].skills[k] === skill) {\r\n              skillsMet++;\r\n              newTeams[team].skillsMet++;\r\n              foundSkill = true;\r\n              break;\r\n            }\r\n          }\r\n          if (foundSkill) break;\r\n        }\r\n      });\r\n    }\r\n\r\n    //average skills met per team\r\n    let avgSkillsMet = skillsMet / Object.keys(newTeams).length;\r\n\r\n    let temp = 0;\r\n    for (let team in newTeams) {\r\n      temp += Math.exp(newTeams[team].skillsMet - avgSkillsMet, 2);\r\n    }\r\n\r\n    let staDevSkillsMet = Math.sqrt(temp / skillsMet);\r\n\r\n    //use normalized average and coefficient of variation as weights\r\n    let skillsMetWeight =\r\n      avgSkillsMet / newTeams[Object.keys(newTeams)[0]].project.skills.length + (staDevSkillsMet / avgSkillsMet) * -0.2;\r\n\r\n    let totalMembers = 0;\r\n    for (let team in newTeams) {\r\n      totalMembers += newTeams[team].members.length;\r\n    }\r\n\r\n    let avgMembersPerTeam = totalMembers / Object.keys(newTeams).length;\r\n    temp = 0;\r\n    for (let team in newTeams) {\r\n      temp += Math.exp(newTeams[team].members.length - avgMembersPerTeam, 2);\r\n    }\r\n\r\n    let coVarMembers = 1 - Math.sqrt(temp / totalMembers) / avgMembersPerTeam;\r\n\r\n    teamCombos.push({\r\n      teams: newTeams,\r\n      avgScoreChoice,\r\n      avgScoreClass,\r\n      skillsMetRatio: skillsMetWeight,\r\n      coVarMembers,\r\n      unassignedReturn,\r\n      unassignedNormal,\r\n      noResponseStudents,\r\n      unassignedStudents: randomStudents\r\n    });\r\n  }\r\n\r\n  return {\r\n    type: INITIATE_TEAM_GENERATION,\r\n    payload: teamCombos\r\n  };\r\n};\r\n\r\nfunction findTeamForStudent(student, teams, numOfPrefProjects) {\r\n  //Iterate through student's choices\r\n  for (let i = 0; i < numOfPrefProjects && i < student.choices.length; i++) {\r\n    let team = teams[`${student.choices[i]}`];\r\n    //Check if member on team has another choice which they can switch to\r\n    for (let j = team.members.length - 1; j >= 0; j--) {\r\n      if (!team.members[j].returning && !team.members[j].assigned) {\r\n        for (let k = 0; k < numOfPrefProjects; k++) {\r\n          //If member can be moved to new team, move student and then add other student to team\r\n          if (teams[`${team.members[j].choices[k]}`].members.length < 5) {\r\n            team.members[j].choice_num_awarded = k + 1;\r\n            student.choice_num_awarded = i + 1;\r\n\r\n            teams[`${team.members[j].choices[k]}`].members.push(team.members[j]);\r\n            team.members.splice(j, 1);\r\n            team.members.push(student);\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nexport const selectCombination = value => {\r\n  return {\r\n    type: SELECT_TEAM_COMBINATION,\r\n    payload: value\r\n  };\r\n};\r\n","import SetupPage from '../components/SetupPage';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  changeNumOfPreferredProjects,\r\n  assignProjToStudents,\r\n  changeProjectsArray,\r\n  changeStudentsArray,\r\n  removeStudent,\r\n  setMaxPossibleChoices\r\n} from '../../../actions/setupPageActions.js';\r\n\r\nimport { selectCombination } from '../../../actions/teamBuilderPageActions';\r\nimport {\r\n  getNumOfPreferredProjects,\r\n  getStudents,\r\n  getProjects,\r\n  getManuallyAssignedStudents,\r\n  getMaxPossibleChoices\r\n} from '../../../reducers';\r\n\r\nconst mapStateToProps = state => ({\r\n  numOfPrefProjects: getNumOfPreferredProjects(state),\r\n  students: getStudents(state),\r\n  projects: getProjects(state),\r\n  manuallyAssignedStudents: getManuallyAssignedStudents(state),\r\n  maxPossibleChoices: getMaxPossibleChoices(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  changeNumOfPreferredProjects: value => dispatch(changeNumOfPreferredProjects(value)),\r\n  changeProjectsArray: value => dispatch(changeProjectsArray(value)),\r\n  changeStudentsArray: value => dispatch(changeStudentsArray(value)),\r\n  assignProjToStudents: value => dispatch(assignProjToStudents(value)),\r\n  removeStudent: value => dispatch(removeStudent(value)),\r\n  selectCombination: comboInformation => dispatch(selectCombination(comboInformation)),\r\n  setMaxPossibleChoices: value => dispatch(setMaxPossibleChoices(value))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SetupPage);\r\n","import {\r\n  CHANGE_NUM_PROJECT_SLIDER,\r\n  CHANGE_PROJECTS_ARRAY,\r\n  CHANGE_STUDENTS_ARRAY,\r\n  ASSIGN_PROJ_TO_STUDENT,\r\n  REMOVE_STUDENT,\r\n  SET_MAX_POSSIBLE_CHOICES\r\n} from './actionTypes/setupPageActionTypes';\r\n\r\nexport const removeStudent = value => {\r\n  return {\r\n    type: REMOVE_STUDENT,\r\n    payload: value\r\n  };\r\n};\r\n\r\nexport const changeNumOfPreferredProjects = value => {\r\n  return {\r\n    type: CHANGE_NUM_PROJECT_SLIDER,\r\n    payload: value\r\n  };\r\n};\r\n\r\nexport const changeProjectsArray = value => {\r\n  return {\r\n    type: CHANGE_PROJECTS_ARRAY,\r\n    payload: value\r\n  };\r\n};\r\n\r\nexport const changeStudentsArray = value => {\r\n  return {\r\n    type: CHANGE_STUDENTS_ARRAY,\r\n    payload: value\r\n  };\r\n};\r\n\r\nexport const assignProjToStudents = value => {\r\n  return {\r\n    type: ASSIGN_PROJ_TO_STUDENT,\r\n    payload: value\r\n  };\r\n};\r\n\r\nexport const setMaxPossibleChoices = value => {\r\n  return {\r\n    type: SET_MAX_POSSIBLE_CHOICES,\r\n    payload: value\r\n  };\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AttributeCheckboxes = ({ setChecked, checked }) => {\r\n  const categories = [\r\n    { value: 'avgScoreChoice', display_name: 'Project Preference' },\r\n    { value: 'avgScoreClass', display_name: 'Classification' },\r\n    { value: 'skillsMetRatio', display_name: 'Skill Match' }\r\n  ];\r\n\r\n  const handleToggle = c => () => {\r\n    const currentCategoryName = checked.indexOf(c);\r\n    const newCheckedCategory = [...checked];\r\n    if (currentCategoryName === -1) {\r\n      newCheckedCategory.push(c);\r\n    } else {\r\n      newCheckedCategory.splice(currentCategoryName, 1);\r\n    }\r\n    setChecked(newCheckedCategory);\r\n  };\r\n\r\n  return categories.map((c, i) => (\r\n    <div className='px-4 font-weight-bold' key={i}>\r\n      <input\r\n        type='checkbox'\r\n        className='form-check-input'\r\n        onChange={handleToggle(c.value)}\r\n        value={checked.indexOf(c.value === -1)}\r\n      />\r\n      <label className='form-check-label ml-3'>{c.display_name}</label>\r\n    </div>\r\n  ));\r\n};\r\n\r\nAttributeCheckboxes.propTypes = {\r\n  setChecked: PropTypes.func,\r\n  checked: PropTypes.array\r\n};\r\n\r\nexport default AttributeCheckboxes;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction TeamComboRow({ combo, index, selectCombination, selectTeam }) {\r\n  const onSelectHandler = () => {\r\n    selectCombination(combo);\r\n    selectTeam({});\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <td>\r\n        <div className='text-danger font-weight-bolder'>Combination {index + 1}</div>\r\n        <div>Avg Project Preference Choice: {combo.avgScoreChoice.toFixed(3)}</div>\r\n        <div>Avg Classification Score: {combo.avgScoreClass.toFixed(3)}</div>\r\n        <div>Percent of Skills Matched: {combo.skillsMetRatio.toFixed(3)}</div>\r\n        <div>Members Per Team Weight: {combo.coVarMembers.toFixed(3)}</div>\r\n        {/* <div>Unassigned Return:  {combo.unassignedReturn}</div>\r\n                                            <div>Unassigned Return:  {combo.unassignedReturn}</div> */}\r\n        <div>Unassigned Student(s): {combo.unassignedStudents.length}</div>\r\n      </td>\r\n      <td>\r\n        <button onClick={onSelectHandler} className='dark-gray text-center' style={{ width: '8rem' }}>\r\n          Select\r\n        </button>\r\n      </td>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nTeamComboRow.propTypes = {\r\n  combo: PropTypes.object,\r\n  index: PropTypes.number,\r\n  selectCombination: PropTypes.func,\r\n  selectTeam: PropTypes.func\r\n};\r\n\r\nexport default TeamComboRow;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Card, Table, CardDeck, Spinner } from 'react-bootstrap';\r\nimport TeamComboRow from './TeamComboRow';\r\nimport { orderBy } from 'lodash';\r\n\r\n/* eslint-disable react/prop-types */\r\nfunction DisplayTeamCombinations({ teamCombos = [], selectCombo, regrenerateTeam, selectTeam, checked, loading }) {\r\n  function renderLoading() {\r\n    return (\r\n      <div style={{ height: '50vh' }} className='d-flex justify-content-center align-items-center'>\r\n        <Spinner animation='border' role='status' size='lg'></Spinner>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className='pb-4'>\r\n      <div className='px-3 text-info'>Total Combinations: {teamCombos.length} </div>\r\n      <div className='teamcombination-wrapper p-3'>\r\n        <CardDeck className='tables-container'>\r\n          <Card className='table-card' border='dark'>\r\n            {loading ? (\r\n              renderLoading()\r\n            ) : (\r\n              <Table striped bordered hover>\r\n                <tbody>\r\n                  {orderBy(teamCombos, [...checked, 'coVarMembers'], 'asc').map((combo, index) => {\r\n                    return (\r\n                      <tr key={index}>\r\n                        <TeamComboRow\r\n                          selectCombination={selectCombo}\r\n                          selectTeam={selectTeam}\r\n                          combo={combo}\r\n                          index={index}\r\n                        />\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </Table>\r\n            )}\r\n          </Card>\r\n        </CardDeck>\r\n        <div className='text-info'>\r\n          Number of No Response Students: {teamCombos[0] ? teamCombos[0].noResponseStudents.length : null}\r\n        </div>\r\n        <div className='text-center' style={{ marginTop: '.5rem' }}>\r\n          <button onClick={regrenerateTeam} className='px-3 py-2 orange' style={{ borderRadius: '16px' }}>\r\n            Regenerate Teams\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n/* eslint-enable react/prop-types */\r\n\r\nDisplayTeamCombinations.propTypes = {\r\n  selectCombo: PropTypes.func,\r\n  selectTeam: PropTypes.func,\r\n  teamCombos: PropTypes.array,\r\n  regrenerateTeam: PropTypes.func,\r\n  checked: PropTypes.array\r\n};\r\n\r\nexport default DisplayTeamCombinations;\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction DisplayProjectRow({ combo, selectTeam, teamName }) {\r\n  const onSelectHandlerMembers = () => {\r\n    selectTeam(combo.teams[teamName]);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <td>\r\n        <div>{teamName}</div>\r\n      </td>\r\n      <td>\r\n        <button onClick={onSelectHandlerMembers} className='dark-gray text-center' style={{ width: '8rem' }}>\r\n          Select\r\n        </button>\r\n      </td>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nDisplayProjectRow.propTypes = {\r\n  combo: PropTypes.object,\r\n  selectTeam: PropTypes.func,\r\n  teamName: PropTypes.string\r\n};\r\n\r\nexport default DisplayProjectRow;\r\n","/* eslint-disable react/jsx-key */\r\n/* eslint-disable react/prop-types */\r\nimport React from 'react';\r\nimport { Card, Table, CardDeck } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport DisplayProjectRow from './DisplayProjectRow';\r\nimport { CSVLink } from 'react-csv';\r\n\r\nconst DisplayProjects = ({ combo = {}, selectTeam }) => {\r\n  let headers = [\r\n    { label: 'Team', key: 'Team' },\r\n    { label: 'Student', key: 'Student' },\r\n    { label: 'Choice 1', key: 'Choice 1' },\r\n    { label: 'Choice 2', key: 'Choice 2' },\r\n    { label: 'Choice 3', key: 'Choice 3' },\r\n    { label: 'Choice 4', key: 'Choice 4' },\r\n    { label: 'Choice 5', key: 'Choice 5' },\r\n    { label: 'Choice 6', key: 'Choice 6' },\r\n    { label: 'Student Major', key: 'Student Major' },\r\n    { label: 'Student Classification', key: 'Student Classification' },\r\n    { label: 'Gender', key: 'Gender' },\r\n    { label: 'Skill 1', key: 'Skill 1' },\r\n    { label: 'Skill 2', key: 'Skill 2' },\r\n    { label: 'Skill 3', key: 'Skill 3' }\r\n  ];\r\n\r\n  function getCSV() {\r\n    var newData = [];\r\n    if (combo.teams) {\r\n      let teams = combo.teams;\r\n\r\n      Object.keys(teams).forEach(teamName => {\r\n        let membersArr = teams[teamName].members;\r\n        if (membersArr && membersArr.length > 0) {\r\n          for (let i = 0; i < membersArr.length; i++) {\r\n            let rowData = {};\r\n            let member = membersArr[i];\r\n            rowData['Team'] = teamName;\r\n            if (member['id']) {\r\n              rowData['Student'] = member['name'].trim();\r\n              let choiceRows = member['choices'].map(s => {\r\n                return s.trim();\r\n              });\r\n              for (let j = 1; j <= choiceRows.length; j++) {\r\n                let strRow = 'Choice ' + j;\r\n                rowData[strRow] = choiceRows[j - 1];\r\n              }\r\n              rowData['Student Major'] = member['major'].trim();\r\n              rowData['Student Classification'] = member['classification'].trim();\r\n              rowData['Gender'] = member['gender'].trim();\r\n              let skillSet = member['skills'].map(s => s.trim());\r\n              for (let j = 1; j <= skillSet.length; j++) {\r\n                let skillRow = 'Skill ' + j;\r\n                rowData[skillRow] = skillSet[j - 1];\r\n              }\r\n            }\r\n            newData.push(rowData);\r\n          }\r\n        }\r\n      });\r\n    }\r\n    return newData;\r\n  }\r\n\r\n  return (\r\n    <div className='pb-4'>\r\n      <div className='px-3 text-info'>\r\n        Total Projects: {combo.teams ? <span>{Object.keys(combo.teams).length}</span> : null}\r\n      </div>\r\n      <div className='teamcombination-wrapper p-3'>\r\n        <CardDeck className='tables-container'>\r\n          <Card className='table-card' border='dark'>\r\n            <Table striped bordered hover>\r\n              <tbody>\r\n                {combo.teams\r\n                  ? Object.keys(combo.teams).map((teamName, index) => (\r\n                      <tr key={index}>\r\n                        <DisplayProjectRow combo={combo} selectTeam={selectTeam} teamName={teamName} />\r\n                      </tr>\r\n                    ))\r\n                  : null}\r\n              </tbody>\r\n            </Table>\r\n          </Card>\r\n        </CardDeck>\r\n        <div className='text-center mt-3'>\r\n          <CSVLink data={getCSV()} headers={headers} className='px-3 py-2 orange'>\r\n            <button className='px-3 py-2 orange' style={{ borderRadius: '16px' }}>\r\n              Export\r\n            </button>\r\n          </CSVLink>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nDisplayProjects.propTypes = {\r\n  selectTeam: PropTypes.func,\r\n  combo: PropTypes.object\r\n};\r\n// /*//npm install react-csv --save*/\r\nexport default DisplayProjects;\r\n","/* eslint-disable react/prop-types */\r\nimport React from 'react';\r\nimport { Card, Table, CardDeck } from 'react-bootstrap';\r\nimport { Col } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DisplayTeamInformations = ({ team }) => {\r\n  return (\r\n    <div className='pb-4'>\r\n      <div className='px-3 text-info'>\r\n        {/* <div> {team.project?  (<span>{team.project.name}</span>) :null}</div> */}\r\n        Total Members: {team.members ? <span>{team.members.length}</span> : null}\r\n      </div>\r\n      <div className='teamcombination-wrapper p-3'>\r\n        <CardDeck className='tables-container'>\r\n          <Card className='table-card' border='dark'>\r\n            <Table striped bordered hover>\r\n              {team.project ? (\r\n                <tbody>\r\n                  <tr className='team-classmate-row'>\r\n                    <td>\r\n                      <div className='text-danger font-weight-bolder'>Project Info: </div>\r\n                      <div>{team.project.name}</div>\r\n                      <div>Returning: {team.project.returning + ''}</div>\r\n                      <div>Skills: </div>\r\n                      <Col>\r\n                        {team.project.skills.map((skill, key) => (\r\n                          <div key={key}>\r\n                            {key + 1 + ': '}\r\n                            {skill}\r\n                          </div>\r\n                        ))}\r\n                      </Col>\r\n                    </td>\r\n                  </tr>\r\n\r\n                  {team.members.map((member, index) => (\r\n                    <tr className='team-classmate-row' key={index}>\r\n                      <td>\r\n                        {!index ? <div className='text-danger font-weight-bolder'>Student Info: </div> : null}\r\n                        <div>Name: {member.name}</div>\r\n                        <div>Id: {member.id}</div>\r\n                        <div>Major: {member.major}</div>\r\n                        <div>Year: {member.classification}</div>\r\n                        <div>Gender: {member.gender}</div>\r\n                        <div>Response: {'' + member.response}</div>\r\n                        <div>Choice: {member.choice_num_awarded}</div>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              ) : null}\r\n            </Table>\r\n          </Card>\r\n        </CardDeck>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nDisplayTeamInformations.propTypes = {\r\n  team: PropTypes.object\r\n};\r\n\r\nexport default DisplayTeamInformations;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Header from '../../common/Header';\r\nimport AttributeCheckboxes from './AttributeCheckboxes';\r\nimport DisplayTeamCombinations from './TeamCombinationTable/DisplayTeamCombinations';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport DisplayProjects from './DisplayProjectsTable/DisplayProjects';\r\nimport DisplayTeamInformations from './DisplayTeamInformations';\r\n//npm startimport * as FileSaver from 'file-saver';\r\n//import * as XLSX from 'xlsx';\r\n\r\nclass TeamBuilderPage extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      loading: true,\r\n      combo: {},\r\n      team: {},\r\n      checked: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.waitToGenerateTeams();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.teamCombos !== prevProps.teamCombos || prevState.checked !== this.state.checked) {\r\n      this.setState({ loading: false });\r\n    }\r\n  }\r\n\r\n  setCombo = (combo) => {\r\n    this.setState({ combo });\r\n  };\r\n\r\n  setTeam = (team) => {\r\n    this.setState({ team });\r\n  };\r\n\r\n  setChecked = (checked) => {\r\n    this.setState({ loading: true }, () => {\r\n      setTimeout(() => {\r\n        this.setState({ checked });\r\n      }, 100);\r\n    });\r\n  };\r\n\r\n  waitToGenerateTeams() {\r\n    //Let component fully render before dispatching\r\n    setTimeout(() => {\r\n      const { students, projects, manuallyAssignedStudents, numOfPrefProjects, generateTeams } = this.props;\r\n      generateTeams({ students, projects, manuallyAssignedStudents, numOfPrefProjects });\r\n    }, 100);\r\n  }\r\n\r\n  regrenerateTeam = () => {\r\n    this.setState({ loading: true, combo: {}, team: {} });\r\n    this.waitToGenerateTeams();\r\n  };\r\n\r\n  selectCombo = (comboInformation) => {\r\n    this.props.selectCombination(comboInformation);\r\n  };\r\n\r\n  exportBtn = () => {\r\n    alert('Does not work!!');\r\n  };\r\n\r\n  renderTopSection = () => (\r\n    <div className='team-builder-header-options'>\r\n      <button onClick={this.props.switchToSetup} className='px-3 py-2 back-button green'>\r\n        Go Back\r\n      </button>\r\n      <div className='team-builder-attributes'>\r\n        <div className='font-weight-bolder py-2'>\r\n          <h3>Attribute Importance</h3>\r\n        </div>\r\n        <div className='d-md-flex md-flex-row justify-content-center'>\r\n          <AttributeCheckboxes setChecked={this.setChecked} checked={this.state.checked} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  renderTeamCombinations = () => {\r\n    const { teamCombos } = this.props;\r\n    return (\r\n      <div className='team-combo-view'>\r\n        <div className='font-weight-bolder text-center'>\r\n          <h4>Team Combinations</h4>\r\n        </div>\r\n        <DisplayTeamCombinations\r\n          teamCombos={teamCombos}\r\n          selectCombination={this.selectCombo}\r\n          selectCombo={this.setCombo}\r\n          selectTeam={this.setTeam}\r\n          regrenerateTeam={this.regrenerateTeam}\r\n          checked={this.state.checked}\r\n          loading={this.state.loading}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderViewProjects = () => (\r\n    // <div className='py-2' style={{ height: 'auto' }}>\r\n    <div className='team-combo-view'>\r\n      <div className='font-weight-bolder text-center '>\r\n        <h4>View Projects</h4>\r\n      </div>\r\n      <DisplayProjects combo={this.state.combo} selectTeam={this.setTeam} exportBtn={this.exportBtn} />\r\n    </div>\r\n  );\r\n\r\n  renderTeamInformations = () => (\r\n    // <div className='py-2' style={{ height: 'auto' }}>\r\n    <div className='team-combo-view'>\r\n      <div className='font-weight-bolder text-center'>\r\n        <h4>Team Informations</h4>\r\n      </div>\r\n      <DisplayTeamInformations team={this.state.team} />\r\n    </div>\r\n  );\r\n\r\n  render() {\r\n    return (\r\n      <div className='team-builder-page'>\r\n        <Header />\r\n        {this.renderTopSection()}\r\n        <Row>\r\n          <Col xs={12} md={4} className='bg-light'>\r\n            {this.renderTeamCombinations()}\r\n          </Col>\r\n          <Col xs={12} md={4} className='bg-light'>\r\n            {this.renderViewProjects()}\r\n          </Col>\r\n          <Col xs={12} md={4} className='bg-light'>\r\n            {this.renderTeamInformations()}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTeamBuilderPage.propTypes = {\r\n  numOfPrefProjects: PropTypes.number,\r\n  students: PropTypes.array,\r\n  projects: PropTypes.array,\r\n  switchToSetup: PropTypes.func,\r\n  manuallyAssignedStudents: PropTypes.object,\r\n  teamCombos: PropTypes.array,\r\n  generateTeams: PropTypes.func,\r\n  selectCombination: PropTypes.func,\r\n  selectProjects: PropTypes.func,\r\n  selectMembers: PropTypes.func,\r\n};\r\n\r\nexport default TeamBuilderPage;\r\n","import TeamBuilderPage from '../components/TeamBuilderPage';\r\nimport { connect } from 'react-redux';\r\nimport { generateTeams, selectCombination } from '../../../actions/teamBuilderPageActions';\r\nimport {\r\n  getNumOfPreferredProjects,\r\n  getStudents,\r\n  getProjects,\r\n  getManuallyAssignedStudents,\r\n  getTeamCombos\r\n} from '../../../reducers';\r\n\r\nconst mapStateToProps = state => ({\r\n  numOfPrefProjects: getNumOfPreferredProjects(state),\r\n  students: getStudents(state),\r\n  projects: getProjects(state),\r\n  manuallyAssignedStudents: getManuallyAssignedStudents(state),\r\n  teamCombos: getTeamCombos(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  generateTeams: teamInformation => dispatch(generateTeams(teamInformation)),\r\n  selectCombination: comboInformation => dispatch(selectCombination(comboInformation))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamBuilderPage);\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport SetupPage from './widgets/SetupPage/containers/SetupPageContainer';\r\nimport TeamBuilderPage from './widgets/TeamBuilderPage/containers/TeamBuilderPageContainer';\r\n\r\nexport default class EpicsTeamBuilder extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      showSetupPage: true\r\n    };\r\n  }\r\n\r\n  switchToTeamBuilder = () => {\r\n    this.setState({ showSetupPage: false });\r\n  };\r\n\r\n  switchToSetup = () => {\r\n    this.setState({ showSetupPage: true });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <div className='epics-team-builder'>\r\n          <div className='gray-background' />\r\n          {this.state.showSetupPage ? (\r\n            <SetupPage switchToTeamBuilder={this.switchToTeamBuilder} />\r\n          ) : (\r\n            <TeamBuilderPage switchToSetup={this.switchToSetup} />\r\n          )}\r\n        </div>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './sass/index.scss';\r\nimport '../node_modules/nouislider/distribute/nouislider.css';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport EpicsTeamBuilder from './EpicsTeamBuilder';\r\n\r\nReactDOM.render(<EpicsTeamBuilder />, document.getElementById('root'));\r\n"],"sourceRoot":""}